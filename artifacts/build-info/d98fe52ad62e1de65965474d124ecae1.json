{
	"id": "d98fe52ad62e1de65965474d124ecae1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ballot .sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.4;\r\n\r\n/// @title 委托投票\r\ncontract Ballot {\r\n    // 这里声明了一个新的复合类型用于稍后的变量\r\n    // 它用来表示一个选民\r\n    struct Voter {\r\n        uint256 weight; // 计票的权重\r\n        bool voted; // 若为真，代表该人已投票\r\n        address delegate; // 被委托人\r\n        uint256 vote; // 投票提案的索引\r\n    }\r\n\r\n    // 提案的类型\r\n    struct Proposal {\r\n        bytes32 name; // 简称（最长32个字节）\r\n        uint256 voteCount; // 得票数\r\n    }\r\n\r\n    address public chairperson;\r\n\r\n    // 这声明了一个状态变量，为每个可能的地址存储一个 `Voter`。\r\n    //address => Voter 该类型将address映射为 Voter类型。\r\n    mapping(address => Voter) public voters;\r\n\r\n    // 一个 `Proposal` 结构类型的动态数组\r\n    Proposal[] public proposals;\r\n\r\n    /// 为 `proposalNames` 中的每个提案，创建一个新的（投票）表决\r\n    constructor(bytes32[] memory proposalNames) {\r\n        chairperson = msg.sender;\r\n        voters[chairperson].weight = 1;\r\n        //对于提供的每个提案名称，\r\n        //创建一个新的 Proposal 对象并把它添加到数组的末尾。\r\n        for (uint256 i = 0; i < proposalNames.length; i++) {\r\n            // `Proposal({...})` 创建一个临时 Proposal 对象，\r\n            // `proposals.push(...)` 将其添加到 `proposals` 的末尾\r\n            proposals.push(Proposal({name: proposalNames[i], voteCount: 0}));\r\n        }\r\n    }\r\n\r\n    // 授权 `voter` 对这个（投票）表决进行投票\r\n    // 只有 `chairperson` 可以调用该函数。\r\n    function giveRightToVote(address voter) external {\r\n        // 若 `require` 的第一个参数的计算结果为 `false`，\r\n        // 则终止执行，撤销所有对状态和以太币余额的改动。\r\n        // 在旧版的 EVM 中这曾经会消耗所有 gas，但现在不会了。\r\n        // 使用 require 来检查函数是否被正确地调用，是一个好习惯。\r\n        // 你也可以在 require 的第二个参数中提供一个对错误情况的解释。\r\n        require(\r\n            msg.sender == chairperson,\r\n            \"Only chairperson can give right to vote.\"\r\n        );\r\n        require(!voters[voter].voted, \"The voter already voted.\");\r\n        require(voters[voter].weight == 0);\r\n        voters[voter].weight = 1;\r\n    }\r\n\r\n    /// 把你的投票委托到投票者 `to`。\r\n    //external 此变量/函数是在别处定义的，要在此处引用\r\n    function delegate(address to) external {\r\n        // 传引用\r\n        Voter storage sender = voters[msg.sender];\r\n        require(!sender.voted, \"You already voted.\");\r\n        require(to != msg.sender, \"Self-delegation is disallowed.\");\r\n\r\n        // 委托是可以传递的，只要被委托者 `to` 也设置了委托。\r\n        // 一般来说，这种循环委托是危险的。因为，如果传递的链条太长，\r\n        // 则可能需消耗的gas要多于区块中剩余的（大于区块设置的gasLimit），\r\n        // 这种情况下，委托不会被执行。\r\n        // 而在另一些情况下，如果形成闭环，则会让合约完全卡住。\r\n        while (voters[to].delegate != address(0)) {\r\n            to = voters[to].delegate;\r\n\r\n            // 不允许闭环委托\r\n            require(to != msg.sender, \"Found loop in delegation.\");\r\n        }\r\n\r\n        // `sender` 是一个引用, 相当于对 `voters[msg.sender].voted` 进行修改\r\n        Voter storage delegate_ = voters[to];\r\n\r\n        // Voters cannot delegate to wallets that cannot vote.\r\n        require(delegate_.weight >= 1);\r\n\r\n        sender.voted = true;\r\n        sender.delegate = to;\r\n\r\n        if (delegate_.voted) {\r\n            // 若被委托者已经投过票了，直接增加得票数\r\n            proposals[delegate_.vote].voteCount += sender.weight;\r\n        } else {\r\n            // 若被委托者还没投票，增加委托者的权重\r\n            delegate_.weight += sender.weight;\r\n        }\r\n    }\r\n\r\n    /// 把你的票(包括委托给你的票)，\r\n    /// 投给提案 `proposals[proposal].name`.\r\n    function vote(uint256 proposal) external {\r\n        Voter storage sender = voters[msg.sender];\r\n        require(!sender.voted, \"Already voted.\");\r\n        sender.voted = true;\r\n        sender.vote = proposal;\r\n\r\n        // 如果 `proposal` 超过了数组的范围，则会自动抛出异常，并恢复所有的改动\r\n        proposals[proposal].voteCount += sender.weight;\r\n    }\r\n\r\n    /// @dev 结合之前所有的投票，计算出最终胜出的提案\r\n    function winningProposal() external view returns (uint256 winningProposal_) {\r\n        uint256 winningVoteCount = 0;\r\n        for (uint256 p = 0; p < proposals.length; p++) {\r\n            if (proposals[p].voteCount > winningVoteCount) {\r\n                winningVoteCount = proposals[p].voteCount;\r\n                winningProposal_ = p;\r\n            }\r\n        }\r\n    }\r\n\r\n    // 调用 winningProposal() 函数以获取提案数组中获胜者的索引，并以此返回获胜者的名称\r\n    function winnerName() public view returns (bytes32 winnerName_) {\r\n        // uint256 _winningProposal = winningProposal;\r\n        // winnerName_= proposals[_winningProposal()].name;     \r\n        winnerName_ = proposals[this.winningProposal()].name;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Ballot .sol": {
				"Ballot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "proposalNames",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "chairperson",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "giveRightToVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "voteCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposal",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "voted",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "vote",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerName",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "winnerName_",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "winningProposal_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"winningProposal()": {
								"details": "结合之前所有的投票，计算出最终胜出的提案"
							}
						},
						"title": "委托投票",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ballot .sol\":89:5441  contract Ballot {\r... */\n  mstore(0x40, 0x80)\n    /* \"Ballot .sol\":1009:1567  constructor(bytes32[] memory proposalNames) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Ballot .sol\":1064:1075  chairperson */\n  0x00\n    /* \"Ballot .sol\":1064:1088  chairperson = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"Ballot .sol\":1078:1088  msg.sender */\n  caller\n    /* \"Ballot .sol\":1064:1088  chairperson = msg.sender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"Ballot .sol\":1099:1118  voters[chairperson] */\n  dup2\n  mstore\n    /* \"Ballot .sol\":1064:1088  chairperson = msg.sender */\n  0x01\n    /* \"Ballot .sol\":1099:1118  voters[chairperson] */\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup3\n  keccak256\n    /* \"Ballot .sol\":1099:1129  voters[chairperson].weight = 1 */\n  sstore\n    /* \"Ballot .sol\":1270:1560  for (uint256 i = 0; i < proposalNames.length; i++) {\r... */\ntag_6:\n    /* \"Ballot .sol\":1294:1307  proposalNames */\n  dup2\n    /* \"Ballot .sol\":1294:1314  proposalNames.length */\n  mload\n    /* \"Ballot .sol\":1290:1291  i */\n  dup2\n    /* \"Ballot .sol\":1290:1314  i < proposalNames.length */\n  lt\n    /* \"Ballot .sol\":1270:1560  for (uint256 i = 0; i < proposalNames.length; i++) {\r... */\n  iszero\n  tag_7\n  jumpi\n    /* \"Ballot .sol\":1484:1493  proposals */\n  0x02\n    /* \"Ballot .sol\":1499:1547  Proposal({name: proposalNames[i], voteCount: 0}) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Ballot .sol\":1515:1528  proposalNames */\n  dup5\n    /* \"Ballot .sol\":1529:1530  i */\n  dup5\n    /* \"Ballot .sol\":1515:1531  proposalNames[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_9\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x32)\n  revert(0x00, 0x24)\ntag_9:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n    /* \"Ballot .sol\":1499:1547  Proposal({name: proposalNames[i], voteCount: 0}) */\n  dup3\n  mstore\n    /* \"Ballot .sol\":1544:1545  0 */\n  0x00\n    /* \"Ballot .sol\":1499:1547  Proposal({name: proposalNames[i], voteCount: 0}) */\n  swap2\n  dup2\n  add\n  dup3\n  swap1\n  mstore\n    /* \"Ballot .sol\":1484:1548  proposals.push(Proposal({name: proposalNames[i], voteCount: 0})) */\n  dup4\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup7\n  sstore\n  swap5\n  dup4\n  mstore\n  swap2\n  dup2\n  swap1\n  keccak256\n  dup4\n  mload\n  0x02\n  swap1\n  swap4\n  mul\n  add\n  swap2\n  dup3\n  sstore\n  swap2\n  swap1\n  swap2\n  add\n  mload\n  swap2\n  add\n  sstore\n    /* \"Ballot .sol\":1316:1319  i++ */\n  dup1\n  tag_11\n  dup2\n  tag_12\n  jump\t// in\ntag_11:\n  swap2\n  pop\n  pop\n    /* \"Ballot .sol\":1270:1560  for (uint256 i = 0; i < proposalNames.length; i++) {\r... */\n  jump(tag_6)\ntag_7:\n  pop\n    /* \"Ballot .sol\":1009:1567  constructor(bytes32[] memory proposalNames) {\r... */\n  pop\n    /* \"Ballot .sol\":89:5441  contract Ballot {\r... */\n  jump(tag_14)\n    /* \"#utility.yul\":14:1175   */\ntag_3:\n    /* \"#utility.yul\":109:115   */\n  0x00\n    /* \"#utility.yul\":140:142   */\n  0x20\n    /* \"#utility.yul\":183:185   */\n  dup1\n    /* \"#utility.yul\":171:180   */\n  dup4\n    /* \"#utility.yul\":162:169   */\n  dup6\n    /* \"#utility.yul\":158:181   */\n  sub\n    /* \"#utility.yul\":154:186   */\n  slt\n    /* \"#utility.yul\":151:153   */\n  iszero\n  tag_16\n  jumpi\n    /* \"#utility.yul\":204:210   */\n  dup2\n    /* \"#utility.yul\":196:202   */\n  dup3\n    /* \"#utility.yul\":189:211   */\n  revert\n    /* \"#utility.yul\":151:153   */\ntag_16:\n    /* \"#utility.yul\":236:252   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":301:315   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":298:300   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":333:339   */\n  dup4\n    /* \"#utility.yul\":325:331   */\n  dup5\n    /* \"#utility.yul\":318:340   */\n  revert\n    /* \"#utility.yul\":298:300   */\ntag_17:\n    /* \"#utility.yul\":376:382   */\n  dup2\n    /* \"#utility.yul\":365:374   */\n  dup6\n    /* \"#utility.yul\":361:383   */\n  add\n    /* \"#utility.yul\":351:383   */\n  swap2\n  pop\n    /* \"#utility.yul\":421:428   */\n  dup6\n    /* \"#utility.yul\":414:418   */\n  0x1f\n    /* \"#utility.yul\":410:412   */\n  dup4\n    /* \"#utility.yul\":406:419   */\n  add\n    /* \"#utility.yul\":402:429   */\n  slt\n    /* \"#utility.yul\":392:394   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":448:454   */\n  dup4\n    /* \"#utility.yul\":440:446   */\n  dup5\n    /* \"#utility.yul\":433:455   */\n  revert\n    /* \"#utility.yul\":392:394   */\ntag_18:\n    /* \"#utility.yul\":482:484   */\n  dup2\n    /* \"#utility.yul\":476:485   */\n  mload\n    /* \"#utility.yul\":504:506   */\n  dup2\n    /* \"#utility.yul\":500:502   */\n  dup2\n    /* \"#utility.yul\":497:507   */\n  gt\n    /* \"#utility.yul\":494:496   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":510:528   */\n  tag_20\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":556:558   */\n  dup1\n    /* \"#utility.yul\":553:554   */\n  0x05\n    /* \"#utility.yul\":549:559   */\n  shl\n    /* \"#utility.yul\":588:590   */\n  0x40\n    /* \"#utility.yul\":582:591   */\n  mload\n    /* \"#utility.yul\":651:653   */\n  0x1f\n    /* \"#utility.yul\":647:654   */\n  not\n    /* \"#utility.yul\":642:644   */\n  0x3f\n    /* \"#utility.yul\":638:640   */\n  dup4\n    /* \"#utility.yul\":634:645   */\n  add\n    /* \"#utility.yul\":630:655   */\n  and\n    /* \"#utility.yul\":622:628   */\n  dup2\n    /* \"#utility.yul\":618:656   */\n  add\n    /* \"#utility.yul\":706:712   */\n  dup2\n    /* \"#utility.yul\":694:704   */\n  dup2\n    /* \"#utility.yul\":691:713   */\n  lt\n    /* \"#utility.yul\":686:688   */\n  dup6\n    /* \"#utility.yul\":674:684   */\n  dup3\n    /* \"#utility.yul\":671:689   */\n  gt\n    /* \"#utility.yul\":668:714   */\n  or\n    /* \"#utility.yul\":665:667   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":717:735   */\n  tag_23\n  tag_21\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":753:755   */\n  0x40\n    /* \"#utility.yul\":746:768   */\n  mstore\n    /* \"#utility.yul\":803:821   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":837:852   */\n  dup6\n  dup2\n  add\n  swap4\n  pop\n    /* \"#utility.yul\":872:883   */\n  dup5\n  dup7\n  add\n    /* \"#utility.yul\":902:913   */\n  dup3\n  dup7\n  add\n    /* \"#utility.yul\":898:918   */\n  dup8\n  add\n    /* \"#utility.yul\":895:928   */\n  dup11\n  lt\n    /* \"#utility.yul\":892:894   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":946:952   */\n  dup8\n    /* \"#utility.yul\":938:944   */\n  dup9\n    /* \"#utility.yul\":931:953   */\n  revert\n    /* \"#utility.yul\":892:894   */\ntag_24:\n    /* \"#utility.yul\":973:979   */\n  dup8\n    /* \"#utility.yul\":964:979   */\n  swap6\n  pop\n    /* \"#utility.yul\":988:1144   */\ntag_25:\n    /* \"#utility.yul\":1002:1004   */\n  dup4\n    /* \"#utility.yul\":999:1000   */\n  dup7\n    /* \"#utility.yul\":996:1005   */\n  lt\n    /* \"#utility.yul\":988:1144   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1059:1069   */\n  dup1\n  mload\n    /* \"#utility.yul\":1047:1070   */\n  dup6\n  mstore\n    /* \"#utility.yul\":1020:1021   */\n  0x01\n    /* \"#utility.yul\":1013:1022   */\n  swap6\n  swap1\n  swap6\n  add\n  swap5\n    /* \"#utility.yul\":1090:1102   */\n  swap4\n  dup7\n  add\n  swap4\n    /* \"#utility.yul\":1122:1134   */\n  dup7\n  add\n    /* \"#utility.yul\":988:1144   */\n  jump(tag_25)\ntag_27:\n  pop\n    /* \"#utility.yul\":1163:1169   */\n  swap9\n    /* \"#utility.yul\":120:1175   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1180:1416   */\ntag_12:\n    /* \"#utility.yul\":1219:1222   */\n  0x00\n  not(0x00)\n    /* \"#utility.yul\":1240:1257   */\n  dup3\n  eq\n    /* \"#utility.yul\":1237:1239   */\n  iszero\n  tag_29\n  jumpi\n  shl(0xe0, 0x4e487b71)\n    /* \"#utility.yul\":1280:1313   */\n  dup2\n  mstore\n    /* \"#utility.yul\":1336:1340   */\n  0x11\n    /* \"#utility.yul\":1333:1334   */\n  0x04\n    /* \"#utility.yul\":1326:1341   */\n  mstore\n    /* \"#utility.yul\":1366:1370   */\n  0x24\n    /* \"#utility.yul\":1287:1290   */\n  dup2\n    /* \"#utility.yul\":1354:1371   */\n  revert\n    /* \"#utility.yul\":1237:1239   */\ntag_29:\n  pop\n    /* \"#utility.yul\":1408:1409   */\n  0x01\n    /* \"#utility.yul\":1397:1410   */\n  add\n  swap1\n    /* \"#utility.yul\":1227:1416   */\n  jump\t// out\n    /* \"#utility.yul\":1421:1548   */\ntag_21:\n    /* \"#utility.yul\":1482:1492   */\n  0x4e487b71\n    /* \"#utility.yul\":1477:1480   */\n  0xe0\n    /* \"#utility.yul\":1473:1493   */\n  shl\n    /* \"#utility.yul\":1470:1471   */\n  0x00\n    /* \"#utility.yul\":1463:1494   */\n  mstore\n    /* \"#utility.yul\":1513:1517   */\n  0x41\n    /* \"#utility.yul\":1510:1511   */\n  0x04\n    /* \"#utility.yul\":1503:1518   */\n  mstore\n    /* \"#utility.yul\":1537:1541   */\n  0x24\n    /* \"#utility.yul\":1534:1535   */\n  0x00\n    /* \"#utility.yul\":1527:1542   */\n  revert\n    /* \"#utility.yul\":1453:1548   */\ntag_14:\n    /* \"Ballot .sol\":89:5441  contract Ballot {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ballot .sol\":89:5441  contract Ballot {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x609ff1bd\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9e7b8d61\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe2ba53f0\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x0121b93f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x013cf08b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e4176cf\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ballot .sol\":4221:4604  function vote(uint256 proposal) external {\r... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Ballot .sol\":886:913  Proposal[] public proposals */\n    tag_4:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1283:1308   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1339:1341   */\n      0x20\n        /* \"#utility.yul\":1324:1342   */\n      dup4\n      add\n        /* \"#utility.yul\":1317:1351   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1256:1274   */\n      add\n        /* \"Ballot .sol\":886:913  Proposal[] public proposals */\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ballot .sol\":592:618  address public chairperson */\n    tag_5:\n      sload(0x00)\n      tag_21\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":883:915   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":865:916   */\n      dup2\n      mstore\n        /* \"#utility.yul\":853:855   */\n      0x20\n        /* \"#utility.yul\":838:856   */\n      add\n        /* \"Ballot .sol\":592:618  address public chairperson */\n      tag_19\n        /* \"#utility.yul\":820:922   */\n      jump\n        /* \"Ballot .sol\":2586:4112  function delegate(address to) external {\r... */\n    tag_6:\n      tag_12\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"Ballot .sol\":4687:5055  function winningProposal() external view returns (uint256 winningProposal_) {\r... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1073:1098   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1061:1063   */\n      0x20\n        /* \"#utility.yul\":1046:1064   */\n      add\n        /* \"Ballot .sol\":4687:5055  function winningProposal() external view returns (uint256 winningProposal_) {\r... */\n      tag_19\n        /* \"#utility.yul\":1028:1104   */\n      jump\n        /* \"Ballot .sol\":1692:2452  function giveRightToVote(address voter) external {\r... */\n    tag_8:\n      tag_12\n      tag_34\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n        /* \"Ballot .sol\":784:823  mapping(address => Voter) public voters */\n    tag_9:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_37:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      dup3\n      and\n      swap2\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup5\n      jump\n    tag_36:\n      mload(0x40)\n      tag_19\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":3934:3959   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":4002:4016   */\n      swap2\n      iszero\n        /* \"#utility.yul\":3995:4017   */\n      iszero\n        /* \"#utility.yul\":3990:3992   */\n      0x20\n        /* \"#utility.yul\":3975:3993   */\n      dup5\n      add\n        /* \"#utility.yul\":3968:4018   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4054:4086   */\n      and\n        /* \"#utility.yul\":4049:4051   */\n      0x40\n        /* \"#utility.yul\":4034:4052   */\n      dup4\n      add\n        /* \"#utility.yul\":4027:4087   */\n      mstore\n        /* \"#utility.yul\":4118:4120   */\n      0x60\n        /* \"#utility.yul\":4103:4121   */\n      dup3\n      add\n        /* \"#utility.yul\":4096:4130   */\n      mstore\n        /* \"#utility.yul\":3921:3924   */\n      0x80\n        /* \"#utility.yul\":3906:3925   */\n      add\n      swap1\n        /* \"#utility.yul\":3888:4136   */\n      jump\n        /* \"Ballot .sol\":5181:5438  function winnerName() public view returns (bytes32 winnerName_) {\r... */\n    tag_10:\n      tag_29\n      tag_42\n      jump\t// in\n        /* \"Ballot .sol\":4221:4604  function vote(uint256 proposal) external {\r... */\n    tag_15:\n        /* \"Ballot .sol\":4303:4313  msg.sender */\n      caller\n        /* \"Ballot .sol\":4273:4293  Voter storage sender */\n      0x00\n        /* \"Ballot .sol\":4296:4314  voters[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Ballot .sol\":4296:4302  voters */\n      0x01\n        /* \"Ballot .sol\":4296:4314  voters[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"Ballot .sol\":4334:4346  sender.voted */\n      swap1\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"Ballot .sol\":4333:4346  !sender.voted */\n      iszero\n        /* \"Ballot .sol\":4325:4365  require(!sender.voted, \"Already voted.\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1564:1566   */\n      0x20\n        /* \"Ballot .sol\":4325:4365  require(!sender.voted, \"Already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1546:1567   */\n      mstore\n        /* \"#utility.yul\":1603:1605   */\n      0x0e\n        /* \"#utility.yul\":1583:1601   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1576:1606   */\n      mstore\n      shl(0x91, 0x20b63932b0b23c903b37ba32b217)\n        /* \"#utility.yul\":1622:1640   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1615:1659   */\n      mstore\n        /* \"#utility.yul\":1676:1694   */\n      0x64\n      add\n        /* \"Ballot .sol\":4325:4365  require(!sender.voted, \"Already voted.\") */\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"Ballot .sol\":4391:4395  true */\n      0x01\n        /* \"Ballot .sol\":4376:4388  sender.voted */\n      dup2\n      dup2\n      add\n        /* \"Ballot .sol\":4376:4395  sender.voted = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Ballot .sol\":4406:4417  sender.vote */\n      0x02\n      dup1\n      dup3\n      add\n        /* \"Ballot .sol\":4406:4428  sender.vote = proposal */\n      dup4\n      swap1\n      sstore\n        /* \"Ballot .sol\":4583:4596  sender.weight */\n      dup2\n      sload\n        /* \"Ballot .sol\":4550:4569  proposals[proposal] */\n      dup2\n      sload\n        /* \"Ballot .sol\":4583:4596  sender.weight */\n      swap1\n      swap2\n        /* \"Ballot .sol\":4406:4417  sender.vote */\n      swap1\n        /* \"Ballot .sol\":4420:4428  proposal */\n      dup5\n      swap1\n        /* \"Ballot .sol\":4550:4569  proposals[proposal] */\n      dup2\n      lt\n      tag_49\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_49:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Ballot .sol\":4550:4579  proposals[proposal].voteCount */\n      0x01\n      add\n      0x00\n        /* \"Ballot .sol\":4550:4596  proposals[proposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"Ballot .sol\":4221:4604  function vote(uint256 proposal) external {\r... */\n      jump\t// out\n        /* \"Ballot .sol\":886:913  Proposal[] public proposals */\n    tag_18:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap1\n      swap2\n      pop\n      dup3\n      jump\t// out\n        /* \"Ballot .sol\":2586:4112  function delegate(address to) external {\r... */\n    tag_28:\n        /* \"Ballot .sol\":2688:2698  msg.sender */\n      caller\n        /* \"Ballot .sol\":2658:2678  Voter storage sender */\n      0x00\n        /* \"Ballot .sol\":2681:2699  voters[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Ballot .sol\":2681:2687  voters */\n      0x01\n        /* \"Ballot .sol\":2681:2699  voters[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"Ballot .sol\":2719:2731  sender.voted */\n      swap1\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"Ballot .sol\":2718:2731  !sender.voted */\n      iszero\n        /* \"Ballot .sol\":2710:2754  require(!sender.voted, \"You already voted.\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1907:1909   */\n      0x20\n        /* \"Ballot .sol\":2710:2754  require(!sender.voted, \"You already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1889:1910   */\n      mstore\n        /* \"#utility.yul\":1946:1948   */\n      0x12\n        /* \"#utility.yul\":1926:1944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1919:1949   */\n      mstore\n      shl(0x71, 0x2cb7ba9030b63932b0b23c903b37ba32b217)\n        /* \"#utility.yul\":1965:1983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1958:2006   */\n      mstore\n        /* \"#utility.yul\":2023:2041   */\n      0x64\n      add\n        /* \"Ballot .sol\":2710:2754  require(!sender.voted, \"You already voted.\") */\n      tag_47\n        /* \"#utility.yul\":1879:2047   */\n      jump\n        /* \"Ballot .sol\":2710:2754  require(!sender.voted, \"You already voted.\") */\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ballot .sol\":2773:2789  to != msg.sender */\n      dup3\n      and\n        /* \"Ballot .sol\":2779:2789  msg.sender */\n      caller\n        /* \"Ballot .sol\":2773:2789  to != msg.sender */\n      eq\n      iszero\n        /* \"Ballot .sol\":2765:2824  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3370:3372   */\n      0x20\n        /* \"Ballot .sol\":2765:2824  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3352:3373   */\n      mstore\n        /* \"#utility.yul\":3409:3411   */\n      0x1e\n        /* \"#utility.yul\":3389:3407   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3382:3412   */\n      mstore\n        /* \"#utility.yul\":3448:3480   */\n      0x53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e0000\n        /* \"#utility.yul\":3428:3446   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3421:3481   */\n      mstore\n        /* \"#utility.yul\":3498:3516   */\n      0x64\n      add\n        /* \"Ballot .sol\":2765:2824  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n      tag_47\n        /* \"#utility.yul\":3342:3522   */\n      jump\n        /* \"Ballot .sol\":2765:2824  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ballot .sol\":3277:3287  voters[to] */\n      dup3\n      dup2\n      and\n        /* \"Ballot .sol\":3308:3309  0 */\n      0x00\n        /* \"Ballot .sol\":3277:3287  voters[to] */\n      swap1\n      dup2\n      mstore\n        /* \"Ballot .sol\":3277:3283  voters */\n      0x01\n        /* \"Ballot .sol\":3277:3287  voters[to] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"Ballot .sol\":3277:3296  voters[to].delegate */\n      add\n      sload\n      0x0100\n      swap1\n      div\n      and\n        /* \"Ballot .sol\":3277:3310  voters[to].delegate != address(0) */\n      iszero\n        /* \"Ballot .sol\":3270:3472  while (voters[to].delegate != address(0)) {\r... */\n      tag_63\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ballot .sol\":3332:3342  voters[to] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Ballot .sol\":3332:3338  voters */\n      0x01\n        /* \"Ballot .sol\":3332:3342  voters[to] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"Ballot .sol\":3332:3351  voters[to].delegate */\n      add\n      sload\n      0x0100\n      swap1\n      div\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Ballot .sol\":3420:3430  msg.sender */\n      caller\n        /* \"Ballot .sol\":3414:3430  to != msg.sender */\n      dup3\n      eq\n      iszero\n        /* \"Ballot .sol\":3406:3460  require(to != msg.sender, \"Found loop in delegation.\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2663:2665   */\n      0x20\n        /* \"Ballot .sol\":3406:3460  require(to != msg.sender, \"Found loop in delegation.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2645:2666   */\n      mstore\n        /* \"#utility.yul\":2702:2704   */\n      0x19\n        /* \"#utility.yul\":2682:2700   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2675:2705   */\n      mstore\n        /* \"#utility.yul\":2741:2768   */\n      0x466f756e64206c6f6f7020696e2064656c65676174696f6e2e00000000000000\n        /* \"#utility.yul\":2721:2739   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2714:2769   */\n      mstore\n        /* \"#utility.yul\":2786:2804   */\n      0x64\n      add\n        /* \"Ballot .sol\":3406:3460  require(to != msg.sender, \"Found loop in delegation.\") */\n      tag_47\n        /* \"#utility.yul\":2635:2810   */\n      jump\n        /* \"Ballot .sol\":3406:3460  require(to != msg.sender, \"Found loop in delegation.\") */\n    tag_64:\n        /* \"Ballot .sol\":3270:3472  while (voters[to].delegate != address(0)) {\r... */\n      jump(tag_59)\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ballot .sol\":3601:3611  voters[to] */\n      dup3\n      and\n        /* \"Ballot .sol\":3575:3598  Voter storage delegate_ */\n      0x00\n        /* \"Ballot .sol\":3601:3611  voters[to] */\n      swap1\n      dup2\n      mstore\n        /* \"Ballot .sol\":3601:3607  voters */\n      0x01\n        /* \"Ballot .sol\":3601:3611  voters[to] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"Ballot .sol\":3696:3712  delegate_.weight */\n      dup1\n      sload\n        /* \"Ballot .sol\":3601:3611  voters[to] */\n      swap1\n      swap2\n      gt\n        /* \"Ballot .sol\":3696:3717  delegate_.weight >= 1 */\n      iszero\n        /* \"Ballot .sol\":3688:3718  require(delegate_.weight >= 1) */\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n        /* \"Ballot .sol\":3746:3750  true */\n      0x01\n        /* \"Ballot .sol\":3731:3743  sender.voted */\n      dup3\n      dup2\n      add\n        /* \"Ballot .sol\":3731:3750  sender.voted = true */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x01))\n        /* \"Ballot .sol\":3761:3781  sender.delegate = to */\n      and\n        /* \"Ballot .sol\":3731:3750  sender.voted = true */\n      0x0100\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ballot .sol\":3761:3781  sender.delegate = to */\n      dup8\n      and\n      mul\n      or\n      dup3\n      or\n      swap1\n      sstore\n        /* \"Ballot .sol\":3798:3813  delegate_.voted */\n      dup2\n      add\n      sload\n        /* \"Ballot .sol\":3731:3750  sender.voted = true */\n      0xff\n        /* \"Ballot .sol\":3798:3813  delegate_.voted */\n      and\n        /* \"Ballot .sol\":3794:4105  if (delegate_.voted) {\r... */\n      iszero\n      tag_68\n      jumpi\n        /* \"Ballot .sol\":3943:3956  sender.weight */\n      dup2\n      sload\n        /* \"Ballot .sol\":3904:3913  proposals */\n      0x02\n        /* \"Ballot .sol\":3914:3928  delegate_.vote */\n      dup3\n      dup2\n      add\n      sload\n        /* \"Ballot .sol\":3904:3929  proposals[delegate_.vote] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_69\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_69:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Ballot .sol\":3904:3939  proposals[delegate_.vote].voteCount */\n      0x01\n      add\n      0x00\n        /* \"Ballot .sol\":3904:3956  proposals[delegate_.vote].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      tag_71\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_71:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"Ballot .sol\":3794:4105  if (delegate_.voted) {\r... */\n      tag_72\n      swap1\n      pop\n      jump\n    tag_68:\n        /* \"Ballot .sol\":4080:4093  sender.weight */\n      dup2\n      sload\n        /* \"Ballot .sol\":4060:4093  delegate_.weight += sender.weight */\n      dup2\n      sload\n        /* \"Ballot .sol\":4060:4069  delegate_ */\n      dup3\n      swap1\n        /* \"Ballot .sol\":4080:4093  sender.weight */\n      0x00\n      swap1\n        /* \"Ballot .sol\":4060:4093  delegate_.weight += sender.weight */\n      tag_73\n      swap1\n        /* \"Ballot .sol\":4080:4093  sender.weight */\n      dup5\n      swap1\n        /* \"Ballot .sol\":4060:4093  delegate_.weight += sender.weight */\n      tag_52\n      jump\t// in\n    tag_73:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Ballot .sol\":3794:4105  if (delegate_.voted) {\r... */\n    tag_72:\n        /* \"Ballot .sol\":2586:4112  function delegate(address to) external {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Ballot .sol\":4687:5055  function winningProposal() external view returns (uint256 winningProposal_) {\r... */\n    tag_30:\n        /* \"Ballot .sol\":4737:4761  uint256 winningProposal_ */\n      0x00\n      dup1\n      dup1\n        /* \"Ballot .sol\":4813:5048  for (uint256 p = 0; p < proposals.length; p++) {\r... */\n    tag_75:\n        /* \"Ballot .sol\":4837:4846  proposals */\n      0x02\n        /* \"Ballot .sol\":4837:4853  proposals.length */\n      sload\n        /* \"Ballot .sol\":4833:4853  p < proposals.length */\n      dup2\n      lt\n        /* \"Ballot .sol\":4813:5048  for (uint256 p = 0; p < proposals.length; p++) {\r... */\n      iszero\n      tag_76\n      jumpi\n        /* \"Ballot .sol\":4904:4920  winningVoteCount */\n      dup2\n        /* \"Ballot .sol\":4879:4888  proposals */\n      0x02\n        /* \"Ballot .sol\":4889:4890  p */\n      dup3\n        /* \"Ballot .sol\":4879:4891  proposals[p] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_78\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_78:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Ballot .sol\":4879:4901  proposals[p].voteCount */\n      0x01\n      add\n      sload\n        /* \"Ballot .sol\":4879:4920  proposals[p].voteCount > winningVoteCount */\n      gt\n        /* \"Ballot .sol\":4875:5037  if (proposals[p].voteCount > winningVoteCount) {\r... */\n      iszero\n      tag_80\n      jumpi\n        /* \"Ballot .sol\":4960:4969  proposals */\n      0x02\n        /* \"Ballot .sol\":4970:4971  p */\n      dup2\n        /* \"Ballot .sol\":4960:4972  proposals[p] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_81\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_81:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Ballot .sol\":4960:4982  proposals[p].voteCount */\n      0x01\n      add\n      sload\n        /* \"Ballot .sol\":4941:4982  winningVoteCount = proposals[p].voteCount */\n      swap2\n      pop\n        /* \"Ballot .sol\":5020:5021  p */\n      dup1\n        /* \"Ballot .sol\":5001:5021  winningProposal_ = p */\n      swap3\n      pop\n        /* \"Ballot .sol\":4875:5037  if (proposals[p].voteCount > winningVoteCount) {\r... */\n    tag_80:\n        /* \"Ballot .sol\":4855:4858  p++ */\n      dup1\n      tag_83\n      dup2\n      tag_84\n      jump\t// in\n    tag_83:\n      swap2\n      pop\n      pop\n        /* \"Ballot .sol\":4813:5048  for (uint256 p = 0; p < proposals.length; p++) {\r... */\n      jump(tag_75)\n    tag_76:\n      pop\n        /* \"Ballot .sol\":4687:5055  function winningProposal() external view returns (uint256 winningProposal_) {\r... */\n      pop\n      swap1\n      jump\t// out\n        /* \"Ballot .sol\":1692:2452  function giveRightToVote(address voter) external {\r... */\n    tag_35:\n        /* \"Ballot .sol\":2217:2228  chairperson */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"Ballot .sol\":2203:2213  msg.sender */\n      caller\n        /* \"Ballot .sol\":2203:2228  msg.sender == chairperson */\n      eq\n        /* \"Ballot .sol\":2181:2296  require(\r... */\n      tag_86\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2254:2256   */\n      0x20\n        /* \"Ballot .sol\":2181:2296  require(\r... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2236:2257   */\n      mstore\n        /* \"#utility.yul\":2293:2295   */\n      0x28\n        /* \"#utility.yul\":2273:2291   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2266:2296   */\n      mstore\n        /* \"#utility.yul\":2332:2366   */\n      0x4f6e6c79206368616972706572736f6e2063616e206769766520726967687420\n        /* \"#utility.yul\":2312:2330   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2305:2367   */\n      mstore\n      shl(0xc1, 0x3a37903b37ba3297)\n        /* \"#utility.yul\":2383:2401   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2376:2414   */\n      mstore\n        /* \"#utility.yul\":2431:2450   */\n      0x84\n      add\n        /* \"Ballot .sol\":2181:2296  require(\r... */\n      tag_47\n        /* \"#utility.yul\":2226:2456   */\n      jump\n        /* \"Ballot .sol\":2181:2296  require(\r... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ballot .sol\":2316:2329  voters[voter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Ballot .sol\":2316:2322  voters */\n      0x01\n        /* \"Ballot .sol\":2316:2329  voters[voter] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"Ballot .sol\":2316:2335  voters[voter].voted */\n      add\n      sload\n      0xff\n      and\n        /* \"Ballot .sol\":2315:2335  !voters[voter].voted */\n      iszero\n        /* \"Ballot .sol\":2307:2364  require(!voters[voter].voted, \"The voter already voted.\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3017:3019   */\n      0x20\n        /* \"Ballot .sol\":2307:2364  require(!voters[voter].voted, \"The voter already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2999:3020   */\n      mstore\n        /* \"#utility.yul\":3056:3058   */\n      0x18\n        /* \"#utility.yul\":3036:3054   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3029:3059   */\n      mstore\n        /* \"#utility.yul\":3095:3121   */\n      0x54686520766f74657220616c726561647920766f7465642e0000000000000000\n        /* \"#utility.yul\":3075:3093   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3068:3122   */\n      mstore\n        /* \"#utility.yul\":3139:3157   */\n      0x64\n      add\n        /* \"Ballot .sol\":2307:2364  require(!voters[voter].voted, \"The voter already voted.\") */\n      tag_47\n        /* \"#utility.yul\":2989:3163   */\n      jump\n        /* \"Ballot .sol\":2307:2364  require(!voters[voter].voted, \"The voter already voted.\") */\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ballot .sol\":2383:2396  voters[voter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Ballot .sol\":2383:2389  voters */\n      0x01\n        /* \"Ballot .sol\":2383:2396  voters[voter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Ballot .sol\":2383:2403  voters[voter].weight */\n      sload\n        /* \"Ballot .sol\":2383:2408  voters[voter].weight == 0 */\n      iszero\n        /* \"Ballot .sol\":2375:2409  require(voters[voter].weight == 0) */\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ballot .sol\":2420:2433  voters[voter] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Ballot .sol\":2443:2444  1 */\n      0x01\n        /* \"Ballot .sol\":2420:2433  voters[voter] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"Ballot .sol\":2420:2444  voters[voter].weight = 1 */\n      sstore\n        /* \"Ballot .sol\":1692:2452  function giveRightToVote(address voter) external {\r... */\n      jump\t// out\n        /* \"Ballot .sol\":5181:5438  function winnerName() public view returns (bytes32 winnerName_) {\r... */\n    tag_42:\n        /* \"Ballot .sol\":5224:5243  bytes32 winnerName_ */\n      0x00\n        /* \"Ballot .sol\":5392:5401  proposals */\n      0x02\n        /* \"Ballot .sol\":5402:5406  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Ballot .sol\":5402:5422  this.winningProposal */\n      and\n      0x609ff1bd\n        /* \"Ballot .sol\":5402:5424  this.winningProposal() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"Ballot .sol\":5392:5425  proposals[this.winningProposal()] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_99\n      jumpi\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_99:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"Ballot .sol\":5392:5430  proposals[this.winningProposal()].name */\n      0x00\n      add\n      sload\n        /* \"Ballot .sol\":5378:5430  winnerName_ = proposals[this.winningProposal()].name */\n      swap1\n      pop\n        /* \"Ballot .sol\":5181:5438  function winnerName() public view returns (bytes32 winnerName_) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:320   */\n    tag_27:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_103:\n        /* \"#utility.yul\":178:201   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":230:261   */\n      dup2\n      and\n        /* \"#utility.yul\":220:262   */\n      dup2\n      eq\n        /* \"#utility.yul\":210:212   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":281:287   */\n      dup2\n        /* \"#utility.yul\":273:279   */\n      dup3\n        /* \"#utility.yul\":266:288   */\n      revert\n        /* \"#utility.yul\":210:212   */\n    tag_104:\n        /* \"#utility.yul\":309:314   */\n      swap4\n        /* \"#utility.yul\":84:320   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":325:515   */\n    tag_14:\n        /* \"#utility.yul\":384:390   */\n      0x00\n        /* \"#utility.yul\":437:439   */\n      0x20\n        /* \"#utility.yul\":425:434   */\n      dup3\n        /* \"#utility.yul\":416:423   */\n      dup5\n        /* \"#utility.yul\":412:435   */\n      sub\n        /* \"#utility.yul\":408:440   */\n      slt\n        /* \"#utility.yul\":405:407   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":458:464   */\n      dup1\n        /* \"#utility.yul\":450:456   */\n      dup2\n        /* \"#utility.yul\":443:465   */\n      revert\n        /* \"#utility.yul\":405:407   */\n    tag_106:\n      pop\n        /* \"#utility.yul\":486:509   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":395:515   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":520:714   */\n    tag_98:\n        /* \"#utility.yul\":590:596   */\n      0x00\n        /* \"#utility.yul\":643:645   */\n      0x20\n        /* \"#utility.yul\":631:640   */\n      dup3\n        /* \"#utility.yul\":622:629   */\n      dup5\n        /* \"#utility.yul\":618:641   */\n      sub\n        /* \"#utility.yul\":614:646   */\n      slt\n        /* \"#utility.yul\":611:613   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":664:670   */\n      dup1\n        /* \"#utility.yul\":656:662   */\n      dup2\n        /* \"#utility.yul\":649:671   */\n      revert\n        /* \"#utility.yul\":611:613   */\n    tag_108:\n      pop\n        /* \"#utility.yul\":692:708   */\n      mload\n      swap2\n        /* \"#utility.yul\":601:714   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4141:4269   */\n    tag_52:\n        /* \"#utility.yul\":4181:4184   */\n      0x00\n        /* \"#utility.yul\":4212:4213   */\n      dup3\n        /* \"#utility.yul\":4208:4214   */\n      not\n        /* \"#utility.yul\":4205:4206   */\n      dup3\n        /* \"#utility.yul\":4202:4215   */\n      gt\n        /* \"#utility.yul\":4199:4201   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":4218:4236   */\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      pop\n        /* \"#utility.yul\":4254:4263   */\n      add\n      swap1\n        /* \"#utility.yul\":4189:4269   */\n      jump\t// out\n        /* \"#utility.yul\":4274:4409   */\n    tag_84:\n        /* \"#utility.yul\":4313:4316   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":4334:4351   */\n      dup3\n      eq\n        /* \"#utility.yul\":4331:4333   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":4354:4372   */\n      tag_126\n      tag_123\n      jump\t// in\n    tag_126:\n      pop\n        /* \"#utility.yul\":4401:4402   */\n      0x01\n        /* \"#utility.yul\":4390:4403   */\n      add\n      swap1\n        /* \"#utility.yul\":4321:4409   */\n      jump\t// out\n        /* \"#utility.yul\":4414:4541   */\n    tag_123:\n        /* \"#utility.yul\":4475:4485   */\n      0x4e487b71\n        /* \"#utility.yul\":4470:4473   */\n      0xe0\n        /* \"#utility.yul\":4466:4486   */\n      shl\n        /* \"#utility.yul\":4463:4464   */\n      0x00\n        /* \"#utility.yul\":4456:4487   */\n      mstore\n        /* \"#utility.yul\":4506:4510   */\n      0x11\n        /* \"#utility.yul\":4503:4504   */\n      0x04\n        /* \"#utility.yul\":4496:4511   */\n      mstore\n        /* \"#utility.yul\":4530:4534   */\n      0x24\n        /* \"#utility.yul\":4527:4528   */\n      0x00\n        /* \"#utility.yul\":4520:4535   */\n      revert\n\n    auxdata: 0xa264697066735822122071c9f77e64a08f175f01adf7baa25201522731ff6a6c60b160683def3461cd7564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1550:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "120:1055:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "130:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "140:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "134:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "196:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "204:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "189:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "189:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "162:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "171:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "158:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "183:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "154:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:32:1"
															},
															"nodeType": "YulIf",
															"src": "151:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "222:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "242:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "236:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "236:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "226:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "261:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "279:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "283:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "287:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "265:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "316:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "333:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "318:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "318:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "318:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "312:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "301:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "301:14:1"
															},
															"nodeType": "YulIf",
															"src": "298:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "351:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "365:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "361:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "361:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "355:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "431:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "440:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "448:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "433:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "433:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "433:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "410:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "414:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "406:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "406:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "421:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "402:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "395:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:35:1"
															},
															"nodeType": "YulIf",
															"src": "392:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "466:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "482:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "476:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "476:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "470:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "508:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "510:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "510:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "510:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "500:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "504:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "497:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "497:10:1"
															},
															"nodeType": "YulIf",
															"src": "494:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "539:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:1:1",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "556:2:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "549:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "549:10:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "543:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "568:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "588:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "582:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "582:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "572:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "600:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "622:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "638:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "642:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "634:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "634:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "651:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "647:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "647:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "630:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "618:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "618:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "604:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "715:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "717:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "717:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "717:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "674:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "686:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "671:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "671:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "694:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "706:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "691:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "691:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "668:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:46:1"
															},
															"nodeType": "YulIf",
															"src": "665:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "753:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "757:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "746:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "746:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "746:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "777:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "788:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "781:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "818:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "803:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "803:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "803:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "830:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "841:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "849:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "837:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "830:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "861:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "876:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "880:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "865:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "929:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "938:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "946:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "931:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "931:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "931:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "906:2:1"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "910:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "902:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "902:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "915:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "920:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "895:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:33:1"
															},
															"nodeType": "YulIf",
															"src": "892:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "964:15:1",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "973:6:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "968:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1033:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1054:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1065:3:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1059:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1059:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1047:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1047:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1047:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1083:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1094:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1099:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1090:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1090:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1083:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1115:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1126:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1131:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1122:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1115:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "999:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1002:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "996:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1006:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1008:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1017:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1020:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1013:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1013:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1008:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "992:3:1",
																"statements": []
															},
															"src": "988:156:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1153:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1163:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1153:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "86:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "97:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "109:6:1",
														"type": ""
													}
												],
												"src": "14:1161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1227:189:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1266:115:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "1287:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1296:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1301:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1292:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1292:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1280:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1280:33:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1280:33:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1333:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1326:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1326:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "1361:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1366:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1354:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1354:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1354:17:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1243:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1254:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1250:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1240:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1240:17:1"
															},
															"nodeType": "YulIf",
															"src": "1237:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1390:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1401:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1408:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1397:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1390:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1209:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1219:3:1",
														"type": ""
													}
												],
												"src": "1180:236:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1453:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1470:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1477:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1482:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1463:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1463:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1513:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1503:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1503:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1503:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1534:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1537:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1527:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1421:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(ret, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516109de3803806109de83398101604081905261002f916100da565b600080546001600160a01b03191633908117825581526001602081905260408220555b81518110156100d3576002604051806040016040528084848151811061008857634e487b7160e01b600052603260045260246000fd5b602090810291909101810151825260009181018290528354600181810186559483529181902083516002909302019182559190910151910155806100cb81610199565b915050610052565b50506101d6565b600060208083850312156100ec578182fd5b82516001600160401b0380821115610102578384fd5b818501915085601f830112610115578384fd5b815181811115610127576101276101c0565b8060051b604051601f19603f8301168101818110858211171561014c5761014c6101c0565b604052828152858101935084860182860187018a101561016a578788fd5b8795505b8386101561018c57805185526001959095019493860193860161016e565b5098975050505050505050565b60006000198214156101b957634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6107f9806101e56000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461010d5780639e7b8d6114610123578063a3ec138d14610136578063e2ba53f0146101a757600080fd5b80630121b93f1461008d578063013cf08b146100a25780632e4176cf146100cf5780635c19a95c146100fa575b600080fd5b6100a061009b36600461074a565b6101af565b005b6100b56100b036600461074a565b610271565b604080519283526020830191909152015b60405180910390f35b6000546100e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100a061010836600461071c565b61029f565b6101156104c1565b6040519081526020016100c6565b6100a061013136600461071c565b61055a565b61017861014436600461071c565b600160208190526000918252604090912080549181015460029091015460ff82169161010090046001600160a01b03169084565b6040516100c6949392919093845291151560208401526001600160a01b03166040830152606082015260800190565b610115610672565b3360009081526001602081905260409091209081015460ff161561020b5760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b60448201526064015b60405180910390fd5b6001818101805460ff191690911790556002808201839055815481549091908490811061024857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001016000828254610268919061077a565b90915550505050565b6002818154811061028157600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff16156102fa5760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b6044820152606401610202565b6001600160a01b0382163314156103535760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610202565b6001600160a01b0382811660009081526001602081905260409091200154610100900416156103f8576001600160a01b0391821660009081526001602081905260409091200154610100900490911690338214156103f35760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e000000000000006044820152606401610202565b610353565b6001600160a01b038216600090815260016020819052604090912080549091111561042257600080fd5b600182810180546001600160a81b0319166101006001600160a01b03871602178217905581015460ff16156104a25781546002828101548154811061047757634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001016000828254610497919061077a565b909155506104bc9050565b8154815482906000906104b690849061077a565b90915550505b505050565b600080805b6002548110156105555781600282815481106104f257634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600101541115610543576002818154811061052b57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001015491508092505b8061054d81610792565b9150506104c6565b505090565b6000546001600160a01b031633146105c55760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b6064820152608401610202565b6001600160a01b0381166000908152600160208190526040909120015460ff16156106325760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e00000000000000006044820152606401610202565b6001600160a01b0381166000908152600160205260409020541561065557600080fd5b6001600160a01b0316600090815260016020819052604090912055565b60006002306001600160a01b031663609ff1bd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106af57600080fd5b505afa1580156106c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e79190610762565b8154811061070557634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160000154905090565b60006020828403121561072d578081fd5b81356001600160a01b0381168114610743578182fd5b9392505050565b60006020828403121561075b578081fd5b5035919050565b600060208284031215610773578081fd5b5051919050565b6000821982111561078d5761078d6107ad565b500190565b60006000198214156107a6576107a66107ad565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122071c9f77e64a08f175f01adf7baa25201522731ff6a6c60b160683def3461cd7564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x9DE CODESIZE SUB DUP1 PUSH2 0x9DE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xD3 JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x88 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0xCB DUP2 PUSH2 0x199 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x52 JUMP JUMPDEST POP POP PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x102 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x115 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x127 JUMPI PUSH2 0x127 PUSH2 0x1C0 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x14C JUMPI PUSH2 0x14C PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x16A JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x18C JUMPI DUP1 MLOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x16E JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x7F9 DUP1 PUSH2 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609FF1BD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0x115 PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST PUSH2 0x178 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x672 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x248 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x353 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 GT ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND MUL OR DUP3 OR SWAP1 SSTORE DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4A2 JUMPI DUP2 SLOAD PUSH1 0x2 DUP3 DUP2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x477 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4BC SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4B6 SWAP1 DUP5 SWAP1 PUSH2 0x77A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x555 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x543 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x52B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x54D DUP2 PUSH2 0x792 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4C6 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A37903B37BA3297 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x609FF1BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x762 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x705 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x743 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x75B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x773 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x78D JUMPI PUSH2 0x78D PUSH2 0x7AD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x7A6 JUMPI PUSH2 0x7A6 PUSH2 0x7AD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xC9F77E64A08F175F01ADF7BAA25201522731 SELFDESTRUCT PUSH11 0x6C60B160683DEF3461CD75 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "89:5352:0:-:0;;;1009:558;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1064:11;:24;;-1:-1:-1;;;;;;1064:24:0;1078:10;1064:24;;;;;1099:19;;1064:24;1099:19;;;;;;;:30;1270:290;1294:13;:20;1290:1;:24;1270:290;;;1484:9;1499:48;;;;;;;;1515:13;1529:1;1515:16;;;;;;-1:-1:-1;;;1515:16:0;;;;;;;;;;;;;;;;;;;;1499:48;;1544:1;1499:48;;;;;;1484:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1316:3;;;;:::i;:::-;;;;1270:290;;;;1009:558;89:5352;;14:1161:1;109:6;140:2;183;171:9;162:7;158:23;154:32;151:2;;;204:6;196;189:22;151:2;236:16;;-1:-1:-1;;;;;301:14:1;;;298:2;;;333:6;325;318:22;298:2;376:6;365:9;361:22;351:32;;421:7;414:4;410:2;406:13;402:27;392:2;;448:6;440;433:22;392:2;482;476:9;504:2;500;497:10;494:2;;;510:18;;:::i;:::-;556:2;553:1;549:10;588:2;582:9;651:2;647:7;642:2;638;634:11;630:25;622:6;618:38;706:6;694:10;691:22;686:2;674:10;671:18;668:46;665:2;;;717:18;;:::i;:::-;753:2;746:22;803:18;;;837:15;;;;-1:-1:-1;872:11:1;;;902;;;898:20;;895:33;-1:-1:-1;892:2:1;;;946:6;938;931:22;892:2;973:6;964:15;;988:156;1002:2;999:1;996:9;988:156;;;1059:10;;1047:23;;1020:1;1013:9;;;;;1090:12;;;;1122;;988:156;;;-1:-1:-1;1163:6:1;120:1055;-1:-1:-1;;;;;;;;120:1055:1:o;1180:236::-;1219:3;-1:-1:-1;;1240:17:1;;1237:2;;;-1:-1:-1;;;1280:33:1;;1336:4;1333:1;1326:15;1366:4;1287:3;1354:17;1237:2;-1:-1:-1;1408:1:1;1397:13;;1227:189::o;1421:127::-;1482:10;1477:3;1473:20;1470:1;1463:31;1513:4;1510:1;1503:15;1537:4;1534:1;1527:15;1453:95;89:5352:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4543:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:236:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "273:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "281:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "223:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "234:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "249:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "254:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "245:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "245:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "258:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "241:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "241:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "230:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "230:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "220:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "220:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "213:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:50:1"
															},
															"nodeType": "YulIf",
															"src": "210:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "299:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "309:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:306:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "395:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "441:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "450:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "458:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "443:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "443:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "416:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "412:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "412:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "437:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:1"
															},
															"nodeType": "YulIf",
															"src": "405:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "476:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "499:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "486:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "361:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "372:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "384:6:1",
														"type": ""
													}
												],
												"src": "325:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "601:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "647:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "656:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "664:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "649:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "649:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "649:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "622:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "631:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "643:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "614:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "614:32:1"
															},
															"nodeType": "YulIf",
															"src": "611:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "682:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "698:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "692:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "692:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "682:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "567:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "578:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "590:6:1",
														"type": ""
													}
												],
												"src": "520:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "820:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "830:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "842:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "853:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "838:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "838:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "830:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "872:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "887:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "903:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "908:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "899:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "899:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "912:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "895:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "895:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "883:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "883:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "865:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "865:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "865:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "789:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "800:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "811:4:1",
														"type": ""
													}
												],
												"src": "719:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1028:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1038:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1050:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1046:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1038:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1080:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1091:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1073:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "997:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1008:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1019:4:1",
														"type": ""
													}
												],
												"src": "927:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1238:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1248:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1260:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1271:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1248:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1290:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1301:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1283:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1283:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1328:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1339:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1324:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1344:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1317:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1199:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1210:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1218:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1229:4:1",
														"type": ""
													}
												],
												"src": "1109:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1536:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1553:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1564:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1546:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1546:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1587:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1598:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1583:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1583:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1576:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1626:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1637:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1622:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1622:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1642:16:1",
																		"type": "",
																		"value": "Already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1615:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1615:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1668:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1680:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1691:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1676:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1668:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1513:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1527:4:1",
														"type": ""
													}
												],
												"src": "1362:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1879:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1896:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1907:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1930:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1941:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1926:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1926:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1946:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1919:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1919:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1919:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1969:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1980:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1965:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1965:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1985:20:1",
																		"type": "",
																		"value": "You already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1958:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2015:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2027:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2038:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2023:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2023:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2015:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1856:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1870:4:1",
														"type": ""
													}
												],
												"src": "1705:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2243:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2254:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2236:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2277:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2288:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2273:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2273:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2293:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2266:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2266:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2316:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2327:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2312:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2312:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2332:34:1",
																		"type": "",
																		"value": "Only chairperson can give right "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2305:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2305:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2387:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2398:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2383:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2403:10:1",
																		"type": "",
																		"value": "to vote."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2376:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2376:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2423:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2435:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2423:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2203:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2217:4:1",
														"type": ""
													}
												],
												"src": "2052:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2635:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2652:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2663:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2645:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2686:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2697:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2675:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2725:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2736:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2721:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2721:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2741:27:1",
																		"type": "",
																		"value": "Found loop in delegation."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2714:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2714:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2714:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2778:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2790:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2801:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2786:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2778:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2612:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2626:4:1",
														"type": ""
													}
												],
												"src": "2461:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2989:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3006:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3017:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2999:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3040:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3051:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3036:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3056:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3029:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3029:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3079:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3090:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3075:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3075:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3095:26:1",
																		"type": "",
																		"value": "The voter already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3068:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3068:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3068:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3131:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3143:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3154:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3139:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3131:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2966:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2980:4:1",
														"type": ""
													}
												],
												"src": "2815:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3342:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3359:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3370:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3352:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3393:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3404:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3389:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3389:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3409:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3382:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3382:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3382:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3432:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3443:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3428:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3428:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3448:32:1",
																		"type": "",
																		"value": "Self-delegation is disallowed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3421:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3421:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3421:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3490:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3502:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3513:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3498:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3498:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3490:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3319:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3333:4:1",
														"type": ""
													}
												],
												"src": "3168:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3628:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3638:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3650:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3661:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3646:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3638:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3680:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3691:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3673:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3673:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3597:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3608:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3619:4:1",
														"type": ""
													}
												],
												"src": "3527:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3888:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3898:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3910:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3921:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3906:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3906:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3898:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3941:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3952:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3934:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3934:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3934:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3979:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3990:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3975:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3975:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "4009:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4002:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3995:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3995:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3968:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3968:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3968:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4038:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4049:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4034:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4034:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4058:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4074:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4079:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4070:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4070:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4083:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4066:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4066:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4054:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4027:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4027:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4027:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4107:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4118:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4103:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4103:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4123:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4096:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4096:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_address_t_uint256__to_t_uint256_t_bool_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3833:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3844:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3852:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3860:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3868:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3879:4:1",
														"type": ""
													}
												],
												"src": "3709:427:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4189:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4216:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4218:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4218:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4218:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4205:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4212:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4208:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4202:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4202:13:1"
															},
															"nodeType": "YulIf",
															"src": "4199:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4247:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4258:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4261:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4254:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4254:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4247:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4172:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4175:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4181:3:1",
														"type": ""
													}
												],
												"src": "4141:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4321:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4352:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4354:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4354:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4354:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4337:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4348:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4344:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4344:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4334:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4334:17:1"
															},
															"nodeType": "YulIf",
															"src": "4331:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4383:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4394:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4401:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4390:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4390:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4383:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4303:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4313:3:1",
														"type": ""
													}
												],
												"src": "4274:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4446:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4475:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4456:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4456:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4503:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4506:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4496:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4496:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4496:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4527:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4530:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4520:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4414:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"You already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Only chairperson can give right \")\n        mstore(add(headStart, 96), \"to vote.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Found loop in delegation.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"The voter already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Self-delegation is disallowed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_bool_t_address_t_uint256__to_t_uint256_t_bool_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063609ff1bd1161005b578063609ff1bd1461010d5780639e7b8d6114610123578063a3ec138d14610136578063e2ba53f0146101a757600080fd5b80630121b93f1461008d578063013cf08b146100a25780632e4176cf146100cf5780635c19a95c146100fa575b600080fd5b6100a061009b36600461074a565b6101af565b005b6100b56100b036600461074a565b610271565b604080519283526020830191909152015b60405180910390f35b6000546100e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100c6565b6100a061010836600461071c565b61029f565b6101156104c1565b6040519081526020016100c6565b6100a061013136600461071c565b61055a565b61017861014436600461071c565b600160208190526000918252604090912080549181015460029091015460ff82169161010090046001600160a01b03169084565b6040516100c6949392919093845291151560208401526001600160a01b03166040830152606082015260800190565b610115610672565b3360009081526001602081905260409091209081015460ff161561020b5760405162461bcd60e51b815260206004820152600e60248201526d20b63932b0b23c903b37ba32b21760911b60448201526064015b60405180910390fd5b6001818101805460ff191690911790556002808201839055815481549091908490811061024857634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001016000828254610268919061077a565b90915550505050565b6002818154811061028157600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff16156102fa5760405162461bcd60e51b81526020600482015260126024820152712cb7ba9030b63932b0b23c903b37ba32b21760711b6044820152606401610202565b6001600160a01b0382163314156103535760405162461bcd60e51b815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610202565b6001600160a01b0382811660009081526001602081905260409091200154610100900416156103f8576001600160a01b0391821660009081526001602081905260409091200154610100900490911690338214156103f35760405162461bcd60e51b815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e000000000000006044820152606401610202565b610353565b6001600160a01b038216600090815260016020819052604090912080549091111561042257600080fd5b600182810180546001600160a81b0319166101006001600160a01b03871602178217905581015460ff16156104a25781546002828101548154811061047757634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001016000828254610497919061077a565b909155506104bc9050565b8154815482906000906104b690849061077a565b90915550505b505050565b600080805b6002548110156105555781600282815481106104f257634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600101541115610543576002818154811061052b57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016001015491508092505b8061054d81610792565b9150506104c6565b505090565b6000546001600160a01b031633146105c55760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e2067697665207269676874206044820152673a37903b37ba329760c11b6064820152608401610202565b6001600160a01b0381166000908152600160208190526040909120015460ff16156106325760405162461bcd60e51b815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e00000000000000006044820152606401610202565b6001600160a01b0381166000908152600160205260409020541561065557600080fd5b6001600160a01b0316600090815260016020819052604090912055565b60006002306001600160a01b031663609ff1bd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106af57600080fd5b505afa1580156106c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e79190610762565b8154811061070557634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160000154905090565b60006020828403121561072d578081fd5b81356001600160a01b0381168114610743578182fd5b9392505050565b60006020828403121561075b578081fd5b5035919050565b600060208284031215610773578081fd5b5051919050565b6000821982111561078d5761078d6107ad565b500190565b60006000198214156107a6576107a66107ad565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122071c9f77e64a08f175f01adf7baa25201522731ff6a6c60b160683def3461cd7564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609FF1BD GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0xFA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB5 PUSH2 0xB0 CALLDATASIZE PUSH1 0x4 PUSH2 0x74A JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0x115 PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x55A JUMP JUMPDEST PUSH2 0x178 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x71C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x672 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x20B63932B0B23C903B37BA32B217 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x248 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2CB7BA9030B63932B0B23C903B37BA32B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x353 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH2 0x353 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 GT ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND MUL OR DUP3 OR SWAP1 SSTORE DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4A2 JUMPI DUP2 SLOAD PUSH1 0x2 DUP3 DUP2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x477 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x497 SWAP2 SWAP1 PUSH2 0x77A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4BC SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x4B6 SWAP1 DUP5 SWAP1 PUSH2 0x77A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x555 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x543 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x52B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x54D DUP2 PUSH2 0x792 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4C6 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x3A37903B37BA3297 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x202 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x609FF1BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x762 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x705 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x743 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x75B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x773 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x78D JUMPI PUSH2 0x78D PUSH2 0x7AD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x7A6 JUMPI PUSH2 0x7A6 PUSH2 0x7AD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xC9F77E64A08F175F01ADF7BAA25201522731 SELFDESTRUCT PUSH11 0x6C60B160683DEF3461CD75 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "89:5352:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4221:383;;;;;;:::i;:::-;;:::i;:::-;;886:27;;;;;;:::i;:::-;;:::i;:::-;;;;1283:25:1;;;1339:2;1324:18;;1317:34;;;;1256:18;886:27:0;;;;;;;;592:26;;;;;-1:-1:-1;;;;;592:26:0;;;;;;-1:-1:-1;;;;;883:32:1;;;865:51;;853:2;838:18;592:26:0;820:102:1;2586:1526:0;;;;;;:::i;:::-;;:::i;4687:368::-;;;:::i;:::-;;;1073:25:1;;;1061:2;1046:18;4687:368:0;1028:76:1;1692:760:0;;;;;;:::i;:::-;;:::i;784:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;784:39:0;;;;;;;;;;;;;3934:25:1;;;4002:14;;3995:22;3990:2;3975:18;;3968:50;-1:-1:-1;;;;;4054:32:1;4049:2;4034:18;;4027:60;4118:2;4103:18;;4096:34;3921:3;3906:19;;3888:248;5181:257:0;;;:::i;4221:383::-;4303:10;4273:20;4296:18;;;:6;:18;;;;;;;;4334:12;;;;;;4333:13;4325:40;;;;-1:-1:-1;;;4325:40:0;;1564:2:1;4325:40:0;;;1546:21:1;1603:2;1583:18;;;1576:30;-1:-1:-1;;;1622:18:1;;;1615:44;1676:18;;4325:40:0;;;;;;;;;4391:4;4376:12;;;:19;;-1:-1:-1;;4376:19:0;;;;;;4406:11;;;;:22;;;4583:13;;4550:19;;4583:13;;4406:11;4420:8;;4550:19;;;;-1:-1:-1;;;4550:19:0;;;;;;;;;;;;;;;;;;;:29;;;:46;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;4221:383:0:o;886:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;886:27:0;:::o;2586:1526::-;2688:10;2658:20;2681:18;;;:6;:18;;;;;;;;2719:12;;;;;;2718:13;2710:44;;;;-1:-1:-1;;;2710:44:0;;1907:2:1;2710:44:0;;;1889:21:1;1946:2;1926:18;;;1919:30;-1:-1:-1;;;1965:18:1;;;1958:48;2023:18;;2710:44:0;1879:168:1;2710:44:0;-1:-1:-1;;;;;2773:16:0;;2779:10;2773:16;;2765:59;;;;-1:-1:-1;;;2765:59:0;;3370:2:1;2765:59:0;;;3352:21:1;3409:2;3389:18;;;3382:30;3448:32;3428:18;;;3421:60;3498:18;;2765:59:0;3342:180:1;2765:59:0;-1:-1:-1;;;;;3277:10:0;;;3308:1;3277:10;;;:6;:10;;;;;;;;:19;;;;;;:33;3270:202;;-1:-1:-1;;;;;3332:10:0;;;;;;;:6;:10;;;;;;;;:19;;;;;;;;;3420:10;3414:16;;;3406:54;;;;-1:-1:-1;;;3406:54:0;;2663:2:1;3406:54:0;;;2645:21:1;2702:2;2682:18;;;2675:30;2741:27;2721:18;;;2714:55;2786:18;;3406:54:0;2635:175:1;3406:54:0;3270:202;;;-1:-1:-1;;;;;3601:10:0;;3575:23;3601:10;;;:6;:10;;;;;;;;3696:16;;3601:10;;-1:-1:-1;3696:21:0;3688:30;;;;;;3746:4;3731:12;;;:19;;-1:-1:-1;;;;;;3761:20:0;3731:19;-1:-1:-1;;;;;3761:20:0;;;;;;;;3798:15;;;3731:19;3798:15;3794:311;;;3943:13;;3904:9;3914:14;;;;3904:25;;;;;;-1:-1:-1;;;3904:25:0;;;;;;;;;;;;;;;;;;;:35;;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;3794:311:0;;-1:-1:-1;3794:311:0;;4080:13;;4060:33;;:9;;4080:13;;4060:33;;4080:13;;4060:33;:::i;:::-;;;;-1:-1:-1;;3794:311:0;2586:1526;;;:::o;4687:368::-;4737:24;;;4813:235;4837:9;:16;4833:20;;4813:235;;;4904:16;4879:9;4889:1;4879:12;;;;;;-1:-1:-1;;;4879:12:0;;;;;;;;;;;;;;;;;;;:22;;;:41;4875:162;;;4960:9;4970:1;4960:12;;;;;;-1:-1:-1;;;4960:12:0;;;;;;;;;;;;;;;;;;;:22;;;4941:41;;5020:1;5001:20;;4875:162;4855:3;;;;:::i;:::-;;;;4813:235;;;;4687:368;;:::o;1692:760::-;2217:11;;-1:-1:-1;;;;;2217:11:0;2203:10;:25;2181:115;;;;-1:-1:-1;;;2181:115:0;;2254:2:1;2181:115:0;;;2236:21:1;2293:2;2273:18;;;2266:30;2332:34;2312:18;;;2305:62;-1:-1:-1;;;2383:18:1;;;2376:38;2431:19;;2181:115:0;2226:230:1;2181:115:0;-1:-1:-1;;;;;2316:13:0;;;;;;:6;:13;;;;;;;;:19;;;;2315:20;2307:57;;;;-1:-1:-1;;;2307:57:0;;3017:2:1;2307:57:0;;;2999:21:1;3056:2;3036:18;;;3029:30;3095:26;3075:18;;;3068:54;3139:18;;2307:57:0;2989:174:1;2307:57:0;-1:-1:-1;;;;;2383:13:0;;;;;;:6;:13;;;;;:20;:25;2375:34;;;;;;-1:-1:-1;;;;;2420:13:0;;;;;2443:1;2420:13;;;;;;;;:24;1692:760::o;5181:257::-;5224:19;5392:9;5402:4;-1:-1:-1;;;;;5402:20:0;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5392:33;;;;;;-1:-1:-1;;;5392:33:0;;;;;;;;;;;;;;;;;;;:38;;;5378:52;;5181:257;:::o;14:306:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:1;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:1:o;325:190::-;384:6;437:2;425:9;416:7;412:23;408:32;405:2;;;458:6;450;443:22;405:2;-1:-1:-1;486:23:1;;395:120;-1:-1:-1;395:120:1:o;520:194::-;590:6;643:2;631:9;622:7;618:23;614:32;611:2;;;664:6;656;649:22;611:2;-1:-1:-1;692:16:1;;601:113;-1:-1:-1;601:113:1:o;4141:128::-;4181:3;4212:1;4208:6;4205:1;4202:13;4199:2;;;4218:18;;:::i;:::-;-1:-1:-1;4254:9:1;;4189:80::o;4274:135::-;4313:3;-1:-1:-1;;4334:17:1;;4331:2;;;4354:18;;:::i;:::-;-1:-1:-1;4401:1:1;4390:13;;4321:88::o;4414:127::-;4475:10;4470:3;4466:20;4463:1;4456:31;4506:4;4503:1;4496:15;4530:4;4527:1;4520:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "408200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"chairperson()": "1082",
								"delegate(address)": "infinite",
								"giveRightToVote(address)": "23057",
								"proposals(uint256)": "2843",
								"vote(uint256)": "64593",
								"voters(address)": "2995",
								"winnerName()": "infinite",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 89,
									"end": 5441,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 89,
									"end": 5441,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 89,
									"end": 5441,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1064,
									"end": 1075,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1078,
									"end": 1088,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1099,
									"end": 1118,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1099,
									"end": 1118,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1064,
									"end": 1088,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1099,
									"end": 1118,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1099,
									"end": 1118,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1099,
									"end": 1118,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1099,
									"end": 1118,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1099,
									"end": 1118,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1099,
									"end": 1118,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1099,
									"end": 1118,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1099,
									"end": 1129,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1270,
									"end": 1560,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1270,
									"end": 1560,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1294,
									"end": 1307,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1294,
									"end": 1314,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1290,
									"end": 1291,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1290,
									"end": 1314,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1270,
									"end": 1560,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1270,
									"end": 1560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1270,
									"end": 1560,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1493,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1528,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1529,
									"end": 1530,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "PUSH",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1531,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1544,
									"end": 1545,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1499,
									"end": 1547,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1484,
									"end": 1548,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1316,
									"end": 1319,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1316,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1316,
									"end": 1319,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1316,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1316,
									"end": 1319,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1316,
									"end": 1319,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1316,
									"end": 1319,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1316,
									"end": 1319,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1316,
									"end": 1319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1316,
									"end": 1319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1270,
									"end": 1560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1270,
									"end": 1560,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1270,
									"end": 1560,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1270,
									"end": 1560,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1270,
									"end": 1560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1567,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 89,
									"end": 5441,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 89,
									"end": 5441,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 1175,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 109,
									"end": 115,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 142,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 183,
									"end": 185,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 180,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 162,
									"end": 169,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 158,
									"end": 181,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 154,
									"end": 186,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 153,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 151,
									"end": 153,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 151,
									"end": 153,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 204,
									"end": 210,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 196,
									"end": 202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 189,
									"end": 211,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 153,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 151,
									"end": 153,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 236,
									"end": 252,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 236,
									"end": 252,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 301,
									"end": 315,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 301,
									"end": 315,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 301,
									"end": 315,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 300,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 298,
									"end": 300,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 300,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 333,
									"end": 339,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 325,
									"end": 331,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 318,
									"end": 340,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 300,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 300,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 376,
									"end": 382,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 365,
									"end": 374,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 361,
									"end": 383,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 351,
									"end": 383,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 351,
									"end": 383,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 421,
									"end": 428,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 414,
									"end": 418,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 410,
									"end": 412,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 406,
									"end": 419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 402,
									"end": 429,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 392,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 392,
									"end": 394,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 448,
									"end": 454,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 440,
									"end": 446,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 433,
									"end": 455,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 392,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 392,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 484,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 476,
									"end": 485,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 504,
									"end": 506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 500,
									"end": 502,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 497,
									"end": 507,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 494,
									"end": 496,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 494,
									"end": 496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 494,
									"end": 496,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 510,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 510,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 510,
									"end": 528,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 510,
									"end": 528,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 510,
									"end": 528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 556,
									"end": 558,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 553,
									"end": 554,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 549,
									"end": 559,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 588,
									"end": 590,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 582,
									"end": 591,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 651,
									"end": 653,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 647,
									"end": 654,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 642,
									"end": 644,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 638,
									"end": 640,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 634,
									"end": 645,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 630,
									"end": 655,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 622,
									"end": 628,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 618,
									"end": 656,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 706,
									"end": 712,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 694,
									"end": 704,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 691,
									"end": 713,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 686,
									"end": 688,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 674,
									"end": 684,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 671,
									"end": 689,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 668,
									"end": 714,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 665,
									"end": 667,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 665,
									"end": 667,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 665,
									"end": 667,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 717,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 717,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 717,
									"end": 735,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 717,
									"end": 735,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 717,
									"end": 735,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 755,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 746,
									"end": 768,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 803,
									"end": 821,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 803,
									"end": 821,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 803,
									"end": 821,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 837,
									"end": 852,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 837,
									"end": 852,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 837,
									"end": 852,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 837,
									"end": 852,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 872,
									"end": 883,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 872,
									"end": 883,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 872,
									"end": 883,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 902,
									"end": 913,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 902,
									"end": 913,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 902,
									"end": 913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 898,
									"end": 918,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 898,
									"end": 918,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 895,
									"end": 928,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 892,
									"end": 894,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 892,
									"end": 894,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 892,
									"end": 894,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 946,
									"end": 952,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 938,
									"end": 944,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 931,
									"end": 953,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 892,
									"end": 894,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 892,
									"end": 894,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 973,
									"end": 979,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 964,
									"end": 979,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 964,
									"end": 979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1144,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 988,
									"end": 1144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1004,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 999,
									"end": 1000,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1005,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1144,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 988,
									"end": 1144,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 1069,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 1069,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1070,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1070,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1021,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1102,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1102,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1102,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1102,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1134,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1134,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 988,
									"end": 1144,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 988,
									"end": 1144,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 988,
									"end": 1144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1163,
									"end": 1169,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 120,
									"end": 1175,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 120,
									"end": 1175,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1180,
									"end": 1416,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1180,
									"end": 1416,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1219,
									"end": 1222,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1240,
									"end": 1257,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1240,
									"end": 1257,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1237,
									"end": 1239,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1237,
									"end": 1239,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1237,
									"end": 1239,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1280,
									"end": 1313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1280,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1336,
									"end": 1340,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1333,
									"end": 1334,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1326,
									"end": 1341,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1366,
									"end": 1370,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1287,
									"end": 1290,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1354,
									"end": 1371,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1237,
									"end": 1239,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1237,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1408,
									"end": 1409,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1397,
									"end": 1410,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1227,
									"end": 1416,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1421,
									"end": 1548,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1421,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1492,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1477,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1473,
									"end": 1493,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1471,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1463,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1513,
									"end": 1517,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1510,
									"end": 1511,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1503,
									"end": 1518,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1537,
									"end": 1541,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1534,
									"end": 1535,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1542,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1453,
									"end": 1548,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1453,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 89,
									"end": 5441,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 89,
									"end": 5441,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 89,
									"end": 5441,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 89,
									"end": 5441,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 5441,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 89,
									"end": 5441,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 89,
									"end": 5441,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071c9f77e64a08f175f01adf7baa25201522731ff6a6c60b160683def3461cd7564736f6c63430008040033",
									".code": [
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "609FF1BD"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "609FF1BD"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "9E7B8D61"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "A3EC138D"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "E2BA53F0"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "121B93F"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "13CF08B"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "2E4176CF"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 89,
											"end": 5441,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1283,
											"end": 1308,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1308,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1341,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1351,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1351,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 886,
											"end": 913,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 592,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 592,
											"end": 618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 883,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 883,
											"end": 915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 883,
											"end": 915,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 865,
											"end": 916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 592,
											"end": 618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 820,
											"end": 922,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1028,
											"end": 1104,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 784,
											"end": 823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 784,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3959,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3959,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4016,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4017,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3990,
											"end": 3992,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 3993,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 4018,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4054,
											"end": 4086,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4051,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4034,
											"end": 4052,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4027,
											"end": 4087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4103,
											"end": 4121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3924,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3906,
											"end": 3925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 4136,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5438,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5181,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5181,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5181,
											"end": 5438,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4303,
											"end": 4313,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4273,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4302,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4334,
											"end": 4346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4334,
											"end": 4346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4334,
											"end": 4346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4334,
											"end": 4346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4334,
											"end": 4346,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4334,
											"end": 4346,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4333,
											"end": 4346,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1564,
											"end": 1566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1546,
											"end": 1567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1605,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20B63932B0B23C903B37BA32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1622,
											"end": 1640,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1622,
											"end": 1640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1694,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1676,
											"end": 1694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4325,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4376,
											"end": 4388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4376,
											"end": 4395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4376,
											"end": 4395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4417,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4406,
											"end": 4417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4428,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4428,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4583,
											"end": 4596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4579,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4550,
											"end": 4579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4550,
											"end": 4596,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4221,
											"end": 4604,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 886,
											"end": 913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 886,
											"end": 913,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2698,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2719,
											"end": 2731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2718,
											"end": 2731,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2710,
											"end": 2754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2710,
											"end": 2754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2754,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 1910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1948,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1926,
											"end": 1944,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1926,
											"end": 1944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1926,
											"end": 1944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1949,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B63932B0B23C903B37BA32B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1965,
											"end": 1983,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1965,
											"end": 1983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 1983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 2006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1879,
											"end": 2047,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2710,
											"end": 2754,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2710,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2773,
											"end": 2789,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2789,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2789,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2789,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2765,
											"end": 2824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2765,
											"end": 2824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2765,
											"end": 2824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3370,
											"end": 3372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2765,
											"end": 2824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2765,
											"end": 2824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3411,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3412,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3480,
											"name": "PUSH",
											"source": 1,
											"value": "53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000"
										},
										{
											"begin": 3428,
											"end": 3446,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3428,
											"end": 3446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3498,
											"end": 3516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3342,
											"end": 3522,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2765,
											"end": 2824,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2765,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3308,
											"end": 3309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3287,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3296,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3277,
											"end": 3296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3296,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3277,
											"end": 3310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3270,
											"end": 3472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3342,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3332,
											"end": 3351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3351,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3420,
											"end": 3430,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3430,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2768,
											"name": "PUSH",
											"source": 1,
											"value": "466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000"
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2804,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2786,
											"end": 2804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2635,
											"end": 2810,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3406,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3270,
											"end": 3472,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3472,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3270,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3607,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3696,
											"end": 3712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3696,
											"end": 3712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3696,
											"end": 3717,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3688,
											"end": 3718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3718,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3688,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3761,
											"end": 3781,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3798,
											"end": 3813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3731,
											"end": 3750,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3798,
											"end": 3813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 4105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3794,
											"end": 4105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3914,
											"end": 3928,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3914,
											"end": 3928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3904,
											"end": 3939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3794,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3794,
											"end": 4105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3794,
											"end": 4105,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 4105,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3794,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4080,
											"end": 4093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4080,
											"end": 4093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4080,
											"end": 4093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4060,
											"end": 4093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4080,
											"end": 4093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4080,
											"end": 4093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4060,
											"end": 4093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4060,
											"end": 4093,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4060,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4093,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3794,
											"end": 4105,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3794,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 4112,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4737,
											"end": 4761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 5048,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4813,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4846,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4837,
											"end": 4853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4853,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 5048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4813,
											"end": 5048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4904,
											"end": 4920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4888,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4901,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4879,
											"end": 4901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4879,
											"end": 4920,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4875,
											"end": 5037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4875,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4875,
											"end": 5037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4969,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4970,
											"end": 4971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4982,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4960,
											"end": 4982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4941,
											"end": 4982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5020,
											"end": 5021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5001,
											"end": 5021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4875,
											"end": 5037,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4875,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4813,
											"end": 5048,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 5048,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4813,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 5048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4687,
											"end": 5055,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2217,
											"end": 2228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2213,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2203,
											"end": 2228,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2181,
											"end": 2296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2181,
											"end": 2296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2181,
											"end": 2296,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2181,
											"end": 2296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2273,
											"end": 2291,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2273,
											"end": 2291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2366,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206368616972706572736F6E2063616E206769766520726967687420"
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A37903B37BA3297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2383,
											"end": 2401,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2383,
											"end": 2401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2414,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2431,
											"end": 2450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2226,
											"end": 2456,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2296,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2181,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2307,
											"end": 2364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2307,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3017,
											"end": 3019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2307,
											"end": 2364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2999,
											"end": 3020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3056,
											"end": 3058,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3036,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3036,
											"end": 3054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3036,
											"end": 3054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3059,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3121,
											"name": "PUSH",
											"source": 1,
											"value": "54686520766F74657220616C726561647920766F7465642E0000000000000000"
										},
										{
											"begin": 3075,
											"end": 3093,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3075,
											"end": 3093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3139,
											"end": 3157,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3139,
											"end": 3157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2989,
											"end": 3163,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2307,
											"end": 2364,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2307,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2389,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2383,
											"end": 2408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2375,
											"end": 2409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2409,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2375,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2443,
											"end": 2444,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1692,
											"end": 2452,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5181,
											"end": 5438,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5181,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5224,
											"end": 5243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5401,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5402,
											"end": 5406,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5422,
											"name": "PUSH",
											"source": 0,
											"value": "609FF1BD"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5392,
											"end": 5430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5392,
											"end": 5430,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5378,
											"end": 5430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5181,
											"end": 5438,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 320,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 14,
											"end": 320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 230,
											"end": 261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 230,
											"end": 261,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 220,
											"end": 262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 262,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 210,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 281,
											"end": 287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 273,
											"end": 279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 266,
											"end": 288,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 210,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 309,
											"end": 314,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 84,
											"end": 320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 320,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 325,
											"end": 515,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 325,
											"end": 515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 384,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 416,
											"end": 423,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 412,
											"end": 435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 405,
											"end": 407,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 458,
											"end": 464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 443,
											"end": 465,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 405,
											"end": 407,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 486,
											"end": 509,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 486,
											"end": 509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 395,
											"end": 515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 395,
											"end": 515,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 520,
											"end": 714,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 520,
											"end": 714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 590,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 645,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 631,
											"end": 640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 622,
											"end": 629,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 641,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 614,
											"end": 646,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 611,
											"end": 613,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 611,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 611,
											"end": 613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 664,
											"end": 670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 649,
											"end": 671,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 611,
											"end": 613,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 611,
											"end": 613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 692,
											"end": 708,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 692,
											"end": 708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 601,
											"end": 714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 601,
											"end": 714,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4141,
											"end": 4269,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4141,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4212,
											"end": 4213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4214,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4205,
											"end": 4206,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4215,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4201,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4199,
											"end": 4201,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4218,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4218,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4218,
											"end": 4236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4218,
											"end": 4236,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4218,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4254,
											"end": 4263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4269,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4274,
											"end": 4409,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4274,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4334,
											"end": 4351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4334,
											"end": 4351,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4331,
											"end": 4333,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4331,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4331,
											"end": 4333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4354,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4390,
											"end": 4403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4390,
											"end": 4403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4409,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4414,
											"end": 4541,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4414,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4485,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4470,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4466,
											"end": 4486,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4510,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4503,
											"end": 4504,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4496,
											"end": 4511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4534,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4527,
											"end": 4528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4535,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"chairperson()": "2e4176cf",
							"delegate(address)": "5c19a95c",
							"giveRightToVote(address)": "9e7b8d61",
							"proposals(uint256)": "013cf08b",
							"vote(uint256)": "0121b93f",
							"voters(address)": "a3ec138d",
							"winnerName()": "e2ba53f0",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proposalNames\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"chairperson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vote\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"winnerName_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"winningProposal()\":{\"details\":\"\\u7ed3\\u5408\\u4e4b\\u524d\\u6240\\u6709\\u7684\\u6295\\u7968\\uff0c\\u8ba1\\u7b97\\u51fa\\u6700\\u7ec8\\u80dc\\u51fa\\u7684\\u63d0\\u6848\"}},\"title\":\"\\u59d4\\u6258\\u6295\\u7968\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"\\u4e3a `proposalNames` \\u4e2d\\u7684\\u6bcf\\u4e2a\\u63d0\\u6848\\uff0c\\u521b\\u5efa\\u4e00\\u4e2a\\u65b0\\u7684\\uff08\\u6295\\u7968\\uff09\\u8868\\u51b3\"},\"delegate(address)\":{\"notice\":\"\\u628a\\u4f60\\u7684\\u6295\\u7968\\u59d4\\u6258\\u5230\\u6295\\u7968\\u8005 `to`\\u3002\"},\"vote(uint256)\":{\"notice\":\"\\u628a\\u4f60\\u7684\\u7968(\\u5305\\u62ec\\u59d4\\u6258\\u7ed9\\u4f60\\u7684\\u7968)\\uff0c \\u6295\\u7ed9\\u63d0\\u6848 `proposals[proposal].name`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ballot .sol\":\"Ballot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ballot .sol\":{\"keccak256\":\"0x7ccfe6d2c885a06d14cf30d830b861aa58760597a473598df645ec44d27b525c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ac1d8768875ae1d60ab3abcaf38a1c493e129b0f29cae7f4b2d1f2d89dd155df\",\"dweb:/ipfs/QmPNvQVNToZVbu2E4UYpXJfw3qpTbfeeszZQZpN4NMY578\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 18,
								"contract": "Ballot .sol:Ballot",
								"label": "chairperson",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 23,
								"contract": "Ballot .sol:Ballot",
								"label": "voters",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Voter)11_storage)"
							},
							{
								"astId": 27,
								"contract": "Ballot .sol:Ballot",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)16_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)16_storage)dyn_storage": {
								"base": "t_struct(Proposal)16_storage",
								"encoding": "dynamic_array",
								"label": "struct Ballot.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(Voter)11_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Ballot.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)11_storage"
							},
							"t_struct(Proposal)16_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Proposal",
								"members": [
									{
										"astId": 13,
										"contract": "Ballot .sol:Ballot",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 15,
										"contract": "Ballot .sol:Ballot",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Voter)11_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Voter",
								"members": [
									{
										"astId": 4,
										"contract": "Ballot .sol:Ballot",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 6,
										"contract": "Ballot .sol:Ballot",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 8,
										"contract": "Ballot .sol:Ballot",
										"label": "delegate",
										"offset": 1,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 10,
										"contract": "Ballot .sol:Ballot",
										"label": "vote",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "为 `proposalNames` 中的每个提案，创建一个新的（投票）表决"
							},
							"delegate(address)": {
								"notice": "把你的投票委托到投票者 `to`。"
							},
							"vote(uint256)": {
								"notice": "把你的票(包括委托给你的票)， 投给提案 `proposals[proposal].name`."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Ballot .sol": {
				"ast": {
					"absolutePath": "Ballot .sol",
					"exportedSymbols": {
						"Ballot": [
							314
						]
					},
					"id": 315,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "64:25:0",
								"text": "@title 委托投票"
							},
							"fullyImplemented": true,
							"id": 314,
							"linearizedBaseContracts": [
								314
							],
							"name": "Ballot",
							"nameLocation": "98:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "249:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "241:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "241:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "290:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "285:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 5,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "285:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "delegate",
											"nameLocation": "351:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "343:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "343:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "vote",
											"nameLocation": "394:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "386:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "386:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "224:5:0",
									"nodeType": "StructDefinition",
									"scope": 314,
									"src": "217:214:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 16,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "498:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "490:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 12,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "490:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "voteCount",
											"nameLocation": "554:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "546:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 14,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "546:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "470:8:0",
									"nodeType": "StructDefinition",
									"scope": 314,
									"src": "463:121:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2e4176cf",
									"id": 18,
									"mutability": "mutable",
									"name": "chairperson",
									"nameLocation": "607:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 314,
									"src": "592:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "592:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 23,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "817:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 314,
									"src": "784:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "792:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "784:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"id": 21,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 20,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "803:5:0"
											},
											"referencedDeclaration": 11,
											"src": "803:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 27,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "904:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 314,
									"src": "886:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "Proposal",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 16,
												"src": "886:8:0"
											},
											"referencedDeclaration": 16,
											"src": "886:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$16_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 26,
										"nodeType": "ArrayTypeName",
										"src": "886:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1053:514:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 34,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1064:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 35,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1078:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1078:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1064:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "1064:24:0"
											},
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 39,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1099:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 41,
															"indexExpression": {
																"id": 40,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1106:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1099:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1099:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1128:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1099:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "1099:30:0"
											},
											{
												"body": {
													"id": 68,
													"nodeType": "Block",
													"src": "1321:239:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 61,
																					"name": "proposalNames",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 31,
																					"src": "1515:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 63,
																				"indexExpression": {
																					"id": 62,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 47,
																					"src": "1529:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1515:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 64,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1544:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 60,
																			"name": "Proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 16,
																			"src": "1499:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Proposal_$16_storage_ptr_$",
																				"typeString": "type(struct Ballot.Proposal storage pointer)"
																			}
																		},
																		"id": 65,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"name",
																			"voteCount"
																		],
																		"nodeType": "FunctionCall",
																		"src": "1499:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$16_memory_ptr",
																			"typeString": "struct Ballot.Proposal memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Proposal_$16_memory_ptr",
																			"typeString": "struct Ballot.Proposal memory"
																		}
																	],
																	"expression": {
																		"id": 57,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1484:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																			"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1484:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$16_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Ballot.Proposal storage ref[] storage pointer,struct Ballot.Proposal storage ref)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1484:64:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "1484:64:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 50,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1290:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 51,
															"name": "proposalNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1294:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1294:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1290:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 69,
												"initializationExpression": {
													"assignments": [
														47
													],
													"declarations": [
														{
															"constant": false,
															"id": 47,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1283:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 69,
															"src": "1275:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 46,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1275:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 49,
													"initialValue": {
														"hexValue": "30",
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1287:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1275:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1316:3:0",
														"subExpression": {
															"id": 54,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "1316:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 56,
													"nodeType": "ExpressionStatement",
													"src": "1316:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1270:290:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "922:81:0",
										"text": "为 `proposalNames` 中的每个提案，创建一个新的（投票）表决"
									},
									"id": 71,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "proposalNames",
												"nameLocation": "1038:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1021:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 29,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1021:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 30,
													"nodeType": "ArrayTypeName",
													"src": "1021:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:32:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:0:0"
									},
									"scope": 314,
									"src": "1009:558:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "1741:711:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 77,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2203:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2203:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 79,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "2217:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2203:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420746f20766f74652e",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2243:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
																"typeString": "literal_string \"Only chairperson can give right to vote.\""
															},
															"value": "Only chairperson can give right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
																"typeString": "literal_string \"Only chairperson can give right to vote.\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2181:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2181:115:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "2181:115:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2315:20:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 85,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "2316:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 87,
																	"indexExpression": {
																		"id": 86,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 73,
																		"src": "2323:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2316:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "2316:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520766f74657220616c726561647920766f7465642e",
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2337:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
																"typeString": "literal_string \"The voter already voted.\""
															},
															"value": "The voter already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
																"typeString": "literal_string \"The voter already voted.\""
															}
														],
														"id": 84,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2307:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2307:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "2307:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 94,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "2383:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 96,
																	"indexExpression": {
																		"id": 95,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 73,
																		"src": "2390:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2383:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 97,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "2383:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2407:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2383:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 93,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2375:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2375:34:0"
											},
											{
												"expression": {
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 102,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "2420:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 104,
															"indexExpression": {
																"id": 103,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "2427:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2420:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "2420:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2443:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2420:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "2420:24:0"
											}
										]
									},
									"functionSelector": "9e7b8d61",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "giveRightToVote",
									"nameLocation": "1701:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "1725:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1717:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:15:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:0:0"
									},
									"scope": 314,
									"src": "1692:760:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "2625:1487:0",
										"statements": [
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2672:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 212,
														"src": "2658:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 117,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 116,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "2658:5:0"
															},
															"referencedDeclaration": 11,
															"src": "2658:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 123,
												"initialValue": {
													"baseExpression": {
														"id": 119,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2681:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 122,
													"indexExpression": {
														"expression": {
															"id": 120,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2688:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2688:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2681:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$11_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2658:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2718:13:0",
															"subExpression": {
																"expression": {
																	"id": 125,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2719:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "2719:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520616c726561647920766f7465642e",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2733:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
																"typeString": "literal_string \"You already voted.\""
															},
															"value": "You already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
																"typeString": "literal_string \"You already voted.\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2710:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2710:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "2710:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 132,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "2773:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 133,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2779:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2779:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2773:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
																"typeString": "literal_string \"Self-delegation is disallowed.\""
															},
															"value": "Self-delegation is disallowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
																"typeString": "literal_string \"Self-delegation is disallowed.\""
															}
														],
														"id": 131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2765:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2765:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "2765:59:0"
											},
											{
												"body": {
													"id": 163,
													"nodeType": "Block",
													"src": "3312:160:0",
													"statements": [
														{
															"expression": {
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 148,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "3327:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 149,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "3332:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																				"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																			}
																		},
																		"id": 151,
																		"indexExpression": {
																			"id": 150,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "3339:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3332:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage",
																			"typeString": "struct Ballot.Voter storage ref"
																		}
																	},
																	"id": 152,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "3332:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3327:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 154,
															"nodeType": "ExpressionStatement",
															"src": "3327:24:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 156,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "3414:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 157,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3420:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3420:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3414:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e2e",
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3432:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
																			"typeString": "literal_string \"Found loop in delegation.\""
																		},
																		"value": "Found loop in delegation."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
																			"typeString": "literal_string \"Found loop in delegation.\""
																		}
																	],
																	"id": 155,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3406:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3406:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 162,
															"nodeType": "ExpressionStatement",
															"src": "3406:54:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 139,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "3277:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 141,
															"indexExpression": {
																"id": 140,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "3284:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3277:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "3277:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3308:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3300:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3300:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3277:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "WhileStatement",
												"src": "3270:202:0"
											},
											{
												"assignments": [
													167
												],
												"declarations": [
													{
														"constant": false,
														"id": 167,
														"mutability": "mutable",
														"name": "delegate_",
														"nameLocation": "3589:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 212,
														"src": "3575:23:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 166,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 165,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "3575:5:0"
															},
															"referencedDeclaration": 11,
															"src": "3575:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 171,
												"initialValue": {
													"baseExpression": {
														"id": 168,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "3601:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 170,
													"indexExpression": {
														"id": 169,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "3608:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3601:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$11_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3575:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 173,
																	"name": "delegate_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "3696:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "3696:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3716:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3696:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3688:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3688:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "3688:30:0"
											},
											{
												"expression": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 179,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3731:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "3731:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3746:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3731:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "3731:19:0"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 185,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3761:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "3761:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "3779:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3761:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "3761:20:0"
											},
											{
												"condition": {
													"expression": {
														"id": 191,
														"name": "delegate_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3798:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter storage pointer"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "voted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "3798:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 210,
													"nodeType": "Block",
													"src": "3974:131:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 203,
																		"name": "delegate_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "4060:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 205,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "4060:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 206,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "4080:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "4080:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4060:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "4060:33:0"
														}
													]
												},
												"id": 211,
												"nodeType": "IfStatement",
												"src": "3794:311:0",
												"trueBody": {
													"id": 202,
													"nodeType": "Block",
													"src": "3815:153:0",
													"statements": [
														{
															"expression": {
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 193,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "3904:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																				"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 196,
																		"indexExpression": {
																			"expression": {
																				"id": 194,
																				"name": "delegate_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 167,
																				"src": "3914:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																					"typeString": "struct Ballot.Voter storage pointer"
																				}
																			},
																			"id": 195,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "vote",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 10,
																			"src": "3914:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3904:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$16_storage",
																			"typeString": "struct Ballot.Proposal storage ref"
																		}
																	},
																	"id": 197,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "3904:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 198,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "3943:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "3943:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3904:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 201,
															"nodeType": "ExpressionStatement",
															"src": "3904:52:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "2460:45:0",
										"text": "把你的投票委托到投票者 `to`。"
									},
									"functionSelector": "5c19a95c",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "2595:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2612:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "2604:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2603:12:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2625:0:0"
									},
									"scope": 314,
									"src": "2586:1526:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "4262:342:0",
										"statements": [
											{
												"assignments": [
													221
												],
												"declarations": [
													{
														"constant": false,
														"id": 221,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4287:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 254,
														"src": "4273:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 220,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 219,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "4273:5:0"
															},
															"referencedDeclaration": 11,
															"src": "4273:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"baseExpression": {
														"id": 222,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "4296:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 225,
													"indexExpression": {
														"expression": {
															"id": 223,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4303:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4303:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4296:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$11_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4273:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4333:13:0",
															"subExpression": {
																"expression": {
																	"id": 228,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "4334:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "4334:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920766f7465642e",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4348:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
																"typeString": "literal_string \"Already voted.\""
															},
															"value": "Already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
																"typeString": "literal_string \"Already voted.\""
															}
														],
														"id": 227,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4325:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4325:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "4325:40:0"
											},
											{
												"expression": {
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 234,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "4376:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4376:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4391:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4376:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "4376:19:0"
											},
											{
												"expression": {
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 240,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "4406:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "4406:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 243,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4420:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4406:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "4406:22:0"
											},
											{
												"expression": {
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 246,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "4550:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 248,
															"indexExpression": {
																"id": 247,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "4560:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4550:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$16_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "4550:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 250,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "4583:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "4583:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4550:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "4550:46:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "4120:95:0",
										"text": "把你的票(包括委托给你的票)，\n 投给提案 `proposals[proposal].name`."
									},
									"functionSelector": "0121b93f",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "4230:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "proposal",
												"nameLocation": "4243:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "4235:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:18:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4262:0:0"
									},
									"scope": 314,
									"src": "4221:383:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "4763:292:0",
										"statements": [
											{
												"assignments": [
													262
												],
												"declarations": [
													{
														"constant": false,
														"id": 262,
														"mutability": "mutable",
														"name": "winningVoteCount",
														"nameLocation": "4782:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 297,
														"src": "4774:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 264,
												"initialValue": {
													"hexValue": "30",
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4801:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4774:28:0"
											},
											{
												"body": {
													"id": 295,
													"nodeType": "Block",
													"src": "4860:188:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 276,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "4879:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																				"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 278,
																		"indexExpression": {
																			"id": 277,
																			"name": "p",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 266,
																			"src": "4889:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4879:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$16_storage",
																			"typeString": "struct Ballot.Proposal storage ref"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "4879:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 280,
																	"name": "winningVoteCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "4904:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4879:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "IfStatement",
															"src": "4875:162:0",
															"trueBody": {
																"id": 293,
																"nodeType": "Block",
																"src": "4922:115:0",
																"statements": [
																	{
																		"expression": {
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 282,
																				"name": "winningVoteCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 262,
																				"src": "4941:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 283,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 27,
																						"src": "4960:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																							"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 285,
																					"indexExpression": {
																						"id": 284,
																						"name": "p",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 266,
																						"src": "4970:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4960:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$16_storage",
																						"typeString": "struct Ballot.Proposal storage ref"
																					}
																				},
																				"id": 286,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "voteCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 15,
																				"src": "4960:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4941:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 288,
																		"nodeType": "ExpressionStatement",
																		"src": "4941:41:0"
																	},
																	{
																		"expression": {
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 289,
																				"name": "winningProposal_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "5001:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 290,
																				"name": "p",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "5020:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5001:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 292,
																		"nodeType": "ExpressionStatement",
																		"src": "5001:20:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 269,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "4833:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 270,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "4837:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4837:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4833:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 296,
												"initializationExpression": {
													"assignments": [
														266
													],
													"declarations": [
														{
															"constant": false,
															"id": 266,
															"mutability": "mutable",
															"name": "p",
															"nameLocation": "4826:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 296,
															"src": "4818:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 265,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4818:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 268,
													"initialValue": {
														"hexValue": "30",
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4830:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4818:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4855:3:0",
														"subExpression": {
															"id": 273,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4855:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 275,
													"nodeType": "ExpressionStatement",
													"src": "4855:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4813:235:0"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "4612:69:0",
										"text": "@dev 结合之前所有的投票，计算出最终胜出的提案"
									},
									"functionSelector": "609ff1bd",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winningProposal",
									"nameLocation": "4696:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4711:2:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "winningProposal_",
												"nameLocation": "4745:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "4737:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4736:26:0"
									},
									"scope": 314,
									"src": "4687:368:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "5245:193:0",
										"statements": [
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "winnerName_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "5378:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 304,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5392:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 308,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 305,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5402:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Ballot_$314",
																			"typeString": "contract Ballot"
																		}
																	},
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "winningProposal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 298,
																	"src": "5402:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5402:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5392:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$16_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 309,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "5392:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5378:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "5378:52:0"
											}
										]
									},
									"functionSelector": "e2ba53f0",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winnerName",
									"nameLocation": "5190:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5200:2:0"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "winnerName_",
												"nameLocation": "5232:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "5224:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 300,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5223:21:0"
									},
									"scope": 314,
									"src": "5181:257:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 315,
							"src": "89:5352:0",
							"usedErrors": []
						}
					],
					"src": "37:5404:0"
				},
				"id": 0
			}
		}
	}
}